(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    457473,       8976]
NotebookOptionsPosition[    454263,       8918]
NotebookOutlinePosition[    454659,       8934]
CellTagsIndexPosition[    454616,       8931]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.791125259798669*^9, 3.791125259800518*^9}},
 CellLabel->
  "In[2183]:=",ExpressionUUID->"543c23a4-03cf-44d4-b57c-937e39722863"],

Cell[CellGroupData[{

Cell["import TPCs and trait data", "Section",
 CellChangeTimes->{{3.801237602847588*^9, 3.8012376038159943`*^9}, {
  3.808667132217609*^9, 
  3.808667142113531*^9}},ExpressionUUID->"0b852f5f-b3e4-41ee-a6c9-\
c599dd093b88"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TPCparamsRaw", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/PNAS_Wieczynski_etal_2021_Master/data/TPC_model_parameters.csv\>\"\
", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TPCparamsRawEst", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/PNAS_Wieczynski_etal_2021_Master/data/TPC_model_parameters_est.csv\
\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traitsRaw", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/PNAS_Wieczynski_etal_2021_Master/data/traits_summary.csv\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"demoRaw", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<~/PNAS_Wieczynski_etal_2021_Master/data/demo_parameters.csv\>\"", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sppOrder", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Paramecium bursaria\>\"", ",", 
     "\"\<Paramecium multimicronucleatum\>\"", ",", "\"\<Euplotes sp.\>\"", 
     ",", "\"\<Blepharisma sp.\>\"", ",", "\"\<Urocentrum turbo\>\"", ",", 
     "\"\<Colpidium striatum\>\"", ",", "\"\<Paramecium aurelia\>\"", ",", 
     "\"\<Paramecium caudatum\>\"", ",", "\"\<Tillina magna\>\"", ",", 
     "\"\<Halteria grandinella\>\"", ",", "\"\<Cyclidium glaucoma\>\"", ",", 
     "\"\<Colpoda steinii\>\"", ",", "\"\<Glaucoma sp.\>\"", ",", 
     "\"\<Tetrahymena pyriformis\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nSpp", "=", 
   RowBox[{"Length", "[", "sppOrder", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"sppColors", "=", 
  RowBox[{"RGBColor", "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<#A6CEE3\>\"", ",", "\"\<#1F78B4\>\"", ",", "\"\<#043f70\>\"", ",", 
     "\"\<#33A02C\>\"", ",", "\"\<#46DBBD\>\"", ",", "\"\<#FB9A99\>\"", ",", 
     "\"\<#E31A1C\>\"", ",", "\"\<#8c1029\>\"", ",", "\"\<#FFD500\>\"", ",", 
     "\"\<#C69354\>\"", ",", "\"\<#FF7F00\>\"", ",", "\"\<#c91797\>\"", ",", 
     "\"\<#CAB2D6\>\"", ",", "\"\<#6A3D9A\>\""}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TPCparams", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"TPCparamsRaw", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "i"}], "&"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sppOrder"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TPCparamsPredicted", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"TPCparamsRawEst", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "i"}], "&"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sppOrder"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"traits", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Select", "[", 
       RowBox[{"traitsRaw", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "i"}], "&"}]}], "]"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "sppOrder"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Style", "[", 
  RowBox[{"\"\<Empirical TPC parameters:\>\"", ",", "Bold"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"TPCparamsRaw", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "TPCparams"}], "]"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Style", "[", 
  RowBox[{"\"\<Trait-based (predicted) TPC parameters:\>\"", ",", "Bold"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"TPCparamsRawEst", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", "TPCparamsPredicted"}], 
     "]"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Right"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TPCeqn", "[", 
    RowBox[{"T_", ",", "a_", ",", "Ea_", ",", "Ed_", ",", "Th_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"a", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Ea", "/", 
         RowBox[{"(", 
          RowBox[{"8.6", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "5"}]}]}], ")"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "298.15"}], "-", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"T", "+", "273.15"}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Ed", "/", 
            RowBox[{"(", 
             RowBox[{"8.6", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "5"}]}]}], ")"}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "/", "Th"}], "-", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"T", "+", "273.15"}], ")"}]}]}], ")"}]}], "]"}]}], 
       "]"}]}], "]"}], "-", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TPCfunc", "[", 
     RowBox[{"T_", ",", "SpNum_", ",", "TPCversion_"}], "]"}], ":=", 
    RowBox[{"TPCeqn", "@@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", "T", "}"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TPCversion", "\[Equal]", "\"\<empirical\>\""}], ",", 
         RowBox[{"TPCparams", "[", 
          RowBox[{"[", 
           RowBox[{"SpNum", ",", 
            RowBox[{"2", ";;", "5"}]}], "]"}], "]"}], ",", 
         RowBox[{"TPCparamsPredicted", "[", 
          RowBox[{"[", 
           RowBox[{"SpNum", ",", 
            RowBox[{"10", ";;", "13"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0", "*", "#"}], ")"}], "&"}], "[", "T", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "0", ",", "45"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Gray", ",", "Dashed"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"True", ",", "False"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameTicksStyle", "\[Rule]", 
      RowBox[{"Directive", "[", "18", "]"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Temperature (C)\>\"", ",", "16"}], "]"}], ",", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<r\>\"", ",", "16"}], "]"}]}], "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TPCfunc", "[", 
         RowBox[{"T", ",", "i", ",", "\"\<empirical\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nSpp"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "0", ",", "45"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "sppColors"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p3", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"TPCfunc", "[", 
         RowBox[{"T", ",", "i", ",", "\"\<predicted\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "nSpp"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "0", ",", "45"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"sppColors", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "Dashed"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "sppColors", "]"}]}], "}"}]}], "]"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"p1", ",", "p2", ",", "p3", ",", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "43"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "Automatic"}], "}"}]}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.800875283717465*^9, 3.800875349951641*^9}, {
   3.800877087417297*^9, 3.8008771225619392`*^9}, {3.800877155171085*^9, 
   3.8008772080467863`*^9}, {3.800877535652676*^9, 3.800877603716735*^9}, {
   3.8008776971350393`*^9, 3.800877702004884*^9}, {3.80087776546898*^9, 
   3.8008778285972033`*^9}, {3.800878046383239*^9, 3.8008780578035*^9}, 
   3.800878134093359*^9, {3.8008783790902576`*^9, 3.80087840660649*^9}, {
   3.8008784783890657`*^9, 3.8008784839701233`*^9}, {3.800887256250257*^9, 
   3.800887259673587*^9}, {3.800887807109271*^9, 3.800887833459383*^9}, 
   3.8008878724662027`*^9, 3.8008879982401342`*^9, {3.800888292075177*^9, 
   3.800888324281324*^9}, {3.800896549172336*^9, 3.8008965778784857`*^9}, 
   3.800896695318647*^9, {3.800898753027822*^9, 3.8008987970732813`*^9}, {
   3.801042836592044*^9, 3.801042839749648*^9}, {3.801234538047656*^9, 
   3.8012345660382843`*^9}, {3.8012346033871937`*^9, 3.801234607982903*^9}, {
   3.801234654132638*^9, 3.8012346552578*^9}, {3.8012347099573393`*^9, 
   3.8012347436046877`*^9}, {3.801234813878954*^9, 3.801234845971339*^9}, {
   3.801234999326496*^9, 3.8012349997725983`*^9}, {3.801237189699839*^9, 
   3.801237389903366*^9}, {3.8013254502073317`*^9, 3.801325461310732*^9}, {
   3.8018482101049128`*^9, 3.801848258909642*^9}, {3.801848319877486*^9, 
   3.801848332729754*^9}, 3.802451496729471*^9, {3.802525845021597*^9, 
   3.802525849211772*^9}, {3.802629302339612*^9, 3.802629303137724*^9}, 
   3.802629807532772*^9, {3.802630011549004*^9, 3.802630012471861*^9}, {
   3.802630301300261*^9, 3.802630326214458*^9}, {3.802631077343236*^9, 
   3.802631085689886*^9}, {3.806935711856114*^9, 3.80693571422407*^9}, {
   3.806935875884091*^9, 3.806935895325038*^9}, {3.806936329436281*^9, 
   3.8069363370322437`*^9}, 3.8069365928950872`*^9, {3.8069368202110367`*^9, 
   3.8069368732426987`*^9}, {3.806937220923759*^9, 3.806937281044916*^9}, {
   3.8069373221918917`*^9, 3.806937359885784*^9}, {3.8069374010747757`*^9, 
   3.806937404909816*^9}, {3.806937813416641*^9, 3.80693783254064*^9}, {
   3.8069378633367243`*^9, 3.806937867605278*^9}, {3.8069379367970247`*^9, 
   3.8069379666750517`*^9}, {3.808134051833168*^9, 3.8081340679874353`*^9}, {
   3.8081350322802353`*^9, 3.808135109171176*^9}, 3.8081351731037693`*^9, 
   3.8086491369798937`*^9, {3.808673796871048*^9, 3.808673797343172*^9}, {
   3.809351027782895*^9, 3.809351051310808*^9}, {3.809351113899661*^9, 
   3.809351126679798*^9}, 3.809352747343213*^9, {3.813924357631431*^9, 
   3.813924377900104*^9}, {3.832935456051193*^9, 3.832935460135706*^9}, {
   3.832935529461363*^9, 3.832935530086096*^9}, {3.8329356147235413`*^9, 
   3.832935623934065*^9}, {3.832935680070863*^9, 3.83293568306916*^9}, {
   3.832935751621827*^9, 3.832935798294342*^9}, {3.832935857455723*^9, 
   3.8329358673637*^9}, {3.832935944881711*^9, 3.832935974094063*^9}, 
   3.8329360138667803`*^9, {3.832936110649816*^9, 3.8329361595592413`*^9}, {
   3.832936197329338*^9, 3.832936199432662*^9}, {3.832936387532552*^9, 
   3.832936390553591*^9}, {3.832936979816517*^9, 3.832937006810011*^9}, 
   3.8339131653526278`*^9, {3.833914022374613*^9, 3.833914023851364*^9}, {
   3.84029289179529*^9, 3.840292892973938*^9}, {3.840535496328826*^9, 
   3.8405355333708344`*^9}, {3.840537155499319*^9, 3.84053715940923*^9}, {
   3.840537752174734*^9, 3.840537809104396*^9}, {3.840537919446876*^9, 
   3.8405379194487658`*^9}, {3.8405379547452297`*^9, 3.84053798616894*^9}, 
   3.840557686745141*^9, {3.840559556386301*^9, 
   3.840559556414565*^9}},ExpressionUUID->"1bc24ddc-0547-4873-9472-\
3fb756ae51d0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.4339869281045752, 0.5385620915032681, 0.5934640522875817],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.6509803921568628`", ",", "0.807843137254902`", ",", 
           "0.8901960784313725`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.08104575163398693, 0.3137254901960784, 0.4705882352941177],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.12156862745098039`", ",", "0.47058823529411764`", ",", 
           "0.7058823529411765`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.010457516339869282`, 0.1647058823529412, 0.2928104575163399],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.01568627450980392`", ",", "0.24705882352941178`", ",", 
           "0.4392156862745098`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.01568627450980392, 0.24705882352941178`, 0.4392156862745098],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.13333333333333336`, 0.41830065359477125`, 0.1150326797385621],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.2`", ",", "0.6274509803921569`", ",", "0.17254901960784313`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.18300653594771243`, 0.5725490196078431, 0.49411764705882355`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.27450980392156865`", ",", "0.8588235294117647`", ",", 
           "0.7411764705882353`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.27450980392156865`, 0.8588235294117647, 0.7411764705882353],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6562091503267974, 0.40261437908496733`, 0.4],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.984313725490196`", ",", "0.6039215686274509`", ",", "0.6`"}], 
         "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.984313725490196, 0.6039215686274509, 0.6]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.984313725490196, 0.6039215686274509, 0.6],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5934640522875817, 0.06797385620915034, 0.07320261437908497],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.8901960784313725`", ",", "0.10196078431372549`", ",", 
           "0.10980392156862745`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.36601307189542487`, 0.04183006535947713, 0.10718954248366014`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.5490196078431373`", ",", "0.06274509803921569`", ",", 
           "0.1607843137254902`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.5490196078431373, 0.06274509803921569, 0.1607843137254902],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.8352941176470589, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.5568627450980392, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1.`", ",", "0.8352941176470589`", ",", "0.`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.8352941176470589, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.8352941176470589, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5176470588235295, 0.38431372549019605`, 0.2196078431372549],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.7764705882352941`", ",", "0.5764705882352941`", ",", 
           "0.32941176470588235`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.7764705882352941, 0.5764705882352941, 0.32941176470588235`],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[1., 0.4980392156862745, 0.], RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[0.6666666666666667, 0.3320261437908497, 0.],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{"1.`", ",", "0.4980392156862745`", ",", "0.`"}], "]"}], 
       NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[1., 0.4980392156862745, 0.]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[1., 0.4980392156862745, 0.],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5254901960784314, 0.06013071895424837, 0.3947712418300654],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.788235294117647`", ",", "0.09019607843137255`", ",", 
           "0.592156862745098`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.5281045751633987, 0.465359477124183, 0.5594771241830065],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.792156862745098`", ",", "0.6980392156862745`", ",", 
           "0.8392156862745098`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098],
    Editable->False,
    Selectable->False], ",", 
   InterpretationBox[
    ButtonBox[
     TooltipBox[
      GraphicsBox[{
        {GrayLevel[0], RectangleBox[{0, 0}]}, 
        {GrayLevel[0], RectangleBox[{1, -1}]}, 
        {RGBColor[
         0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
         RectangleBox[{0, -1}, {2, 1}]}},
       AspectRatio->1,
       DefaultBaseStyle->"ColorSwatchGraphics",
       Frame->True,
       FrameStyle->RGBColor[
        0.27712418300653596`, 0.15947712418300655`, 0.40261437908496733`],
       FrameTicks->None,
       ImageSize->
        Dynamic[{
         Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
          Magnification]}],
       PlotRangePadding->None],
      StyleBox[
       RowBox[{"RGBColor", "[", 
         RowBox[{
          "0.41568627450980394`", ",", "0.23921568627450981`", ",", 
           "0.6039215686274509`"}], "]"}], NumberMarks -> False]],
     Appearance->None,
     BaseStyle->{},
     BaselinePosition->Baseline,
     ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
       If[
        Not[
         AbsoluteCurrentValue["Deployed"]], 
        SelectionMove[Typeset`box$, All, Expression]; 
        FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
        FrontEnd`Private`$ColorSelectorInitialColor = 
         RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509]; 
        FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
        MathLink`CallFrontEnd[
          FrontEnd`AttachCell[Typeset`box$, 
           FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
           Left, Top}, 
           "ClosingActions" -> {
            "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
     DefaultBaseStyle->{},
     Evaluator->Automatic,
     Method->"Preemptive"],
    RGBColor[0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509],
    Editable->False,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.800875354615192*^9, 3.800877605058736*^9, 3.800877704196621*^9, 
   3.800877765960993*^9, 3.8008782176052713`*^9, 3.800878407433702*^9, 
   3.800878484800215*^9, 3.800887261218145*^9, {3.800887804450946*^9, 
   3.800887807645751*^9}, 3.800887874913432*^9, 3.8008883251027527`*^9, {
   3.8008966925775757`*^9, 3.8008966969327374`*^9}, 3.80089879920186*^9, 
   3.801042797711218*^9, 3.801042841994577*^9, 3.801045543379752*^9, 
   3.801045643512643*^9, 3.8010456856603947`*^9, 3.801225537248824*^9, {
   3.801234567237781*^9, 3.801234593043948*^9}, 3.8012348473247023`*^9, 
   3.8012350059836617`*^9, 3.801237191008334*^9, 3.801237288233136*^9, 
   3.801237343199065*^9, {3.8012373788919153`*^9, 3.801237390759945*^9}, 
   3.8012402366933727`*^9, 3.801241570025679*^9, 3.8012444210105877`*^9, 
   3.8012977456196203`*^9, 3.801325462604744*^9, 3.801325500742433*^9, 
   3.801392117380476*^9, 3.80140322625802*^9, 3.801418090028645*^9, 
   3.801484039629258*^9, 3.801488863656836*^9, 3.8015695259712467`*^9, 
   3.8015714666056957`*^9, 3.80181809150881*^9, 3.801848282107244*^9, 
   3.801848382468974*^9, {3.802451480360199*^9, 3.8024514987148447`*^9}, 
   3.8025258525782223`*^9, {3.802629794508861*^9, 3.80262980942199*^9}, 
   3.802630013760799*^9, 3.802630327677354*^9, 3.802630436079822*^9, 
   3.80263108669055*^9, 3.802685254808473*^9, 3.803114553140108*^9, 
   3.804529185989497*^9, 3.804949464310033*^9, 3.8054777122381153`*^9, 
   3.8058874117530622`*^9, 3.8067545286044693`*^9, 3.806857390896677*^9, 
   3.806936344776291*^9, 3.8069365958046303`*^9, 3.806936834333488*^9, {
   3.806937225664072*^9, 3.806937281828784*^9}, {3.806937323923306*^9, 
   3.806937339087577*^9}, {3.806937406796329*^9, 3.806937441844521*^9}, 
   3.806937715308435*^9, {3.8069378158189383`*^9, 3.806937874264914*^9}, {
   3.80693794029607*^9, 3.806937972941087*^9}, 3.8081351141230783`*^9, 
   3.80813517830619*^9, 3.8082165583014812`*^9, 3.808581549936809*^9, 
   3.808585649579958*^9, 3.808586014300746*^9, 3.8085869268580427`*^9, {
   3.808649128377632*^9, 3.808649137918067*^9}, 3.808649762680884*^9, 
   3.808655787993203*^9, 3.808662901007818*^9, 3.808663542017501*^9, 
   3.808671528087851*^9, 3.808671627144945*^9, 3.808673670391539*^9, 
   3.808673799745295*^9, 3.80867388830761*^9, 3.8086740476742067`*^9, 
   3.8086742419417477`*^9, 3.808679599085845*^9, 3.8087284035509987`*^9, 
   3.808729243533929*^9, 3.808729955234467*^9, 3.808734592132989*^9, 
   3.808744068812413*^9, 3.808744385263514*^9, 3.808763289039442*^9, {
   3.809350980145369*^9, 3.809350991772135*^9}, {3.809351029525825*^9, 
   3.8093510449411497`*^9}, {3.80935109613897*^9, 3.809351121018895*^9}, 
   3.809352629443512*^9, 3.809352748812767*^9, 3.809372669793426*^9, 
   3.809372787300371*^9, 3.809950434781528*^9, 3.811518957839505*^9, 
   3.8139243803473682`*^9, 3.813925142454804*^9, 3.814180035742366*^9, 
   3.8142656376060667`*^9, 3.8142658314210663`*^9, 3.8142671250602417`*^9, 
   3.814369826966015*^9, 3.814523181192223*^9, 3.815126387681988*^9, 
   3.819200419526333*^9, 3.819217212887122*^9, 3.819445239121958*^9, 
   3.8327744366703568`*^9, 3.832935644790865*^9, {3.8329357537420387`*^9, 
   3.832935811195483*^9}, {3.832935868255949*^9, 3.832935892768443*^9}, 
   3.832935978203761*^9, {3.8329360158395033`*^9, 3.832936033691207*^9}, 
   3.832936101124659*^9, 3.8329361415650587`*^9, 3.832936201495422*^9, 
   3.8329363911156683`*^9, {3.8329369843687973`*^9, 3.832937008222541*^9}, 
   3.832942719090598*^9, 3.832942988625823*^9, 3.832943584517415*^9, 
   3.832964850728894*^9, 3.833913173922515*^9, 3.833914025391197*^9, 
   3.833915060608219*^9, 3.834826220606721*^9, 3.840535539778367*^9, 
   3.840536949572945*^9, 3.840537988911845*^9, 3.8405557359411716`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"ae3d4ea2-3803-477b-ad12-e6661810097f"],

Cell[BoxData[
 StyleBox["\<\"Empirical TPC parameters:\"\>",
  StripOnInput->False,
  FontWeight->Bold]], "Output",
 CellChangeTimes->{
  3.800875354615192*^9, 3.800877605058736*^9, 3.800877704196621*^9, 
   3.800877765960993*^9, 3.8008782176052713`*^9, 3.800878407433702*^9, 
   3.800878484800215*^9, 3.800887261218145*^9, {3.800887804450946*^9, 
   3.800887807645751*^9}, 3.800887874913432*^9, 3.8008883251027527`*^9, {
   3.8008966925775757`*^9, 3.8008966969327374`*^9}, 3.80089879920186*^9, 
   3.801042797711218*^9, 3.801042841994577*^9, 3.801045543379752*^9, 
   3.801045643512643*^9, 3.8010456856603947`*^9, 3.801225537248824*^9, {
   3.801234567237781*^9, 3.801234593043948*^9}, 3.8012348473247023`*^9, 
   3.8012350059836617`*^9, 3.801237191008334*^9, 3.801237288233136*^9, 
   3.801237343199065*^9, {3.8012373788919153`*^9, 3.801237390759945*^9}, 
   3.8012402366933727`*^9, 3.801241570025679*^9, 3.8012444210105877`*^9, 
   3.8012977456196203`*^9, 3.801325462604744*^9, 3.801325500742433*^9, 
   3.801392117380476*^9, 3.80140322625802*^9, 3.801418090028645*^9, 
   3.801484039629258*^9, 3.801488863656836*^9, 3.8015695259712467`*^9, 
   3.8015714666056957`*^9, 3.80181809150881*^9, 3.801848282107244*^9, 
   3.801848382468974*^9, {3.802451480360199*^9, 3.8024514987148447`*^9}, 
   3.8025258525782223`*^9, {3.802629794508861*^9, 3.80262980942199*^9}, 
   3.802630013760799*^9, 3.802630327677354*^9, 3.802630436079822*^9, 
   3.80263108669055*^9, 3.802685254808473*^9, 3.803114553140108*^9, 
   3.804529185989497*^9, 3.804949464310033*^9, 3.8054777122381153`*^9, 
   3.8058874117530622`*^9, 3.8067545286044693`*^9, 3.806857390896677*^9, 
   3.806936344776291*^9, 3.8069365958046303`*^9, 3.806936834333488*^9, {
   3.806937225664072*^9, 3.806937281828784*^9}, {3.806937323923306*^9, 
   3.806937339087577*^9}, {3.806937406796329*^9, 3.806937441844521*^9}, 
   3.806937715308435*^9, {3.8069378158189383`*^9, 3.806937874264914*^9}, {
   3.80693794029607*^9, 3.806937972941087*^9}, 3.8081351141230783`*^9, 
   3.80813517830619*^9, 3.8082165583014812`*^9, 3.808581549936809*^9, 
   3.808585649579958*^9, 3.808586014300746*^9, 3.8085869268580427`*^9, {
   3.808649128377632*^9, 3.808649137918067*^9}, 3.808649762680884*^9, 
   3.808655787993203*^9, 3.808662901007818*^9, 3.808663542017501*^9, 
   3.808671528087851*^9, 3.808671627144945*^9, 3.808673670391539*^9, 
   3.808673799745295*^9, 3.80867388830761*^9, 3.8086740476742067`*^9, 
   3.8086742419417477`*^9, 3.808679599085845*^9, 3.8087284035509987`*^9, 
   3.808729243533929*^9, 3.808729955234467*^9, 3.808734592132989*^9, 
   3.808744068812413*^9, 3.808744385263514*^9, 3.808763289039442*^9, {
   3.809350980145369*^9, 3.809350991772135*^9}, {3.809351029525825*^9, 
   3.8093510449411497`*^9}, {3.80935109613897*^9, 3.809351121018895*^9}, 
   3.809352629443512*^9, 3.809352748812767*^9, 3.809372669793426*^9, 
   3.809372787300371*^9, 3.809950434781528*^9, 3.811518957839505*^9, 
   3.8139243803473682`*^9, 3.813925142454804*^9, 3.814180035742366*^9, 
   3.8142656376060667`*^9, 3.8142658314210663`*^9, 3.8142671250602417`*^9, 
   3.814369826966015*^9, 3.814523181192223*^9, 3.815126387681988*^9, 
   3.819200419526333*^9, 3.819217212887122*^9, 3.819445239121958*^9, 
   3.8327744366703568`*^9, 3.832935644790865*^9, {3.8329357537420387`*^9, 
   3.832935811195483*^9}, {3.832935868255949*^9, 3.832935892768443*^9}, 
   3.832935978203761*^9, {3.8329360158395033`*^9, 3.832936033691207*^9}, 
   3.832936101124659*^9, 3.8329361415650587`*^9, 3.832936201495422*^9, 
   3.8329363911156683`*^9, {3.8329369843687973`*^9, 3.832937008222541*^9}, 
   3.832942719090598*^9, 3.832942988625823*^9, 3.832943584517415*^9, 
   3.832964850728894*^9, 3.833913173922515*^9, 3.833914025391197*^9, 
   3.833915060608219*^9, 3.834826220606721*^9, 3.840535539778367*^9, 
   3.840536949572945*^9, 3.840537988911845*^9, 3.8405557359590273`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"3cd0a287-15d5-4b2d-8a6e-9083436abf73"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Species\"\>", "\<\"a\"\>", "\<\"E_a\"\>", "\<\"E_d\"\>", \
"\<\"Th\"\>", "\<\"T_opt\"\>"},
    {"\<\"Paramecium bursaria\"\>", "2.32517568179013`", 
     "0.0118191538653472`", "3.03999588369034`", "315.023691029854`", 
     "300.186904356038`"},
    {"\<\"Paramecium multimicronucleatum\"\>", "2.32217401871413`", 
     "0.0239633786620397`", "4.5534619117721`", "312.64023020843`", 
     "303.253985742119`"},
    {"\<\"Euplotes sp.\"\>", "2.33323409981231`", "0.0442073490959228`", 
     "3.00699419973139`", "312.566977222232`", "301.243191759747`"},
    {"\<\"Blepharisma sp.\"\>", "2.33052756162966`", "0.0177519222981723`", 
     "4.0474043880807`", "315.67567680888`", "304.59218025252`"},
    {"\<\"Urocentrum turbo\"\>", "2.3725586156647`", "0.0453340272362721`", 
     "3.50637511260525`", "306.889058571996`", "297.191255980066`"},
    {"\<\"Colpidium striatum\"\>", "2.49856639468046`", "0.0888436522671186`",
      "1.27075210661948`", "309.442208409922`", "293.533309945894`"},
    {"\<\"Paramecium aurelia\"\>", "2.51421474100269`", "0.141601033744665`", 
     "1.20940261071681`", "310.790774926806`", "297.50709915989`"},
    {"\<\"Paramecium caudatum\"\>", "2.40149050195677`", 
     "0.0867486737851561`", "6.12681578447665`", "305.359582143397`", 
     "299.905168675091`"},
    {"\<\"Tillina magna\"\>", "2.39266642247853`", "0.0695119533153557`", 
     "1.92410144096335`", "319.587167624654`", "305.26749968635`"},
    {"\<\"Halteria grandinella\"\>", "2.49703098386454`", "0.10783894029846`",
      "2.82975606254459`", "306.101423650779`", "297.176116680691`"},
    {"\<\"Cyclidium glaucoma\"\>", "2.51221327211716`", "0.0851891443891883`",
      "7.15525273501005`", "306.146219979093`", "301.248135780583`"},
    {"\<\"Colpoda steinii\"\>", "2.61698246466673`", "0.140333052226265`", 
     "3.88433010878129`", "306.294138460513`", "299.621724629563`"},
    {"\<\"Glaucoma sp.\"\>", "2.6305337868152`", "0.140107300986922`", 
     "4.96193776036282`", "305.955989756734`", "300.32077189195`"},
    {"\<\"Tetrahymena pyriformis\"\>", "2.56777513221209`", 
     "0.134054636189858`", "12.296591035385`", "308.367680761141`", 
     "305.398607963866`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Right}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.800875354615192*^9, 3.800877605058736*^9, 3.800877704196621*^9, 
   3.800877765960993*^9, 3.8008782176052713`*^9, 3.800878407433702*^9, 
   3.800878484800215*^9, 3.800887261218145*^9, {3.800887804450946*^9, 
   3.800887807645751*^9}, 3.800887874913432*^9, 3.8008883251027527`*^9, {
   3.8008966925775757`*^9, 3.8008966969327374`*^9}, 3.80089879920186*^9, 
   3.801042797711218*^9, 3.801042841994577*^9, 3.801045543379752*^9, 
   3.801045643512643*^9, 3.8010456856603947`*^9, 3.801225537248824*^9, {
   3.801234567237781*^9, 3.801234593043948*^9}, 3.8012348473247023`*^9, 
   3.8012350059836617`*^9, 3.801237191008334*^9, 3.801237288233136*^9, 
   3.801237343199065*^9, {3.8012373788919153`*^9, 3.801237390759945*^9}, 
   3.8012402366933727`*^9, 3.801241570025679*^9, 3.8012444210105877`*^9, 
   3.8012977456196203`*^9, 3.801325462604744*^9, 3.801325500742433*^9, 
   3.801392117380476*^9, 3.80140322625802*^9, 3.801418090028645*^9, 
   3.801484039629258*^9, 3.801488863656836*^9, 3.8015695259712467`*^9, 
   3.8015714666056957`*^9, 3.80181809150881*^9, 3.801848282107244*^9, 
   3.801848382468974*^9, {3.802451480360199*^9, 3.8024514987148447`*^9}, 
   3.8025258525782223`*^9, {3.802629794508861*^9, 3.80262980942199*^9}, 
   3.802630013760799*^9, 3.802630327677354*^9, 3.802630436079822*^9, 
   3.80263108669055*^9, 3.802685254808473*^9, 3.803114553140108*^9, 
   3.804529185989497*^9, 3.804949464310033*^9, 3.8054777122381153`*^9, 
   3.8058874117530622`*^9, 3.8067545286044693`*^9, 3.806857390896677*^9, 
   3.806936344776291*^9, 3.8069365958046303`*^9, 3.806936834333488*^9, {
   3.806937225664072*^9, 3.806937281828784*^9}, {3.806937323923306*^9, 
   3.806937339087577*^9}, {3.806937406796329*^9, 3.806937441844521*^9}, 
   3.806937715308435*^9, {3.8069378158189383`*^9, 3.806937874264914*^9}, {
   3.80693794029607*^9, 3.806937972941087*^9}, 3.8081351141230783`*^9, 
   3.80813517830619*^9, 3.8082165583014812`*^9, 3.808581549936809*^9, 
   3.808585649579958*^9, 3.808586014300746*^9, 3.8085869268580427`*^9, {
   3.808649128377632*^9, 3.808649137918067*^9}, 3.808649762680884*^9, 
   3.808655787993203*^9, 3.808662901007818*^9, 3.808663542017501*^9, 
   3.808671528087851*^9, 3.808671627144945*^9, 3.808673670391539*^9, 
   3.808673799745295*^9, 3.80867388830761*^9, 3.8086740476742067`*^9, 
   3.8086742419417477`*^9, 3.808679599085845*^9, 3.8087284035509987`*^9, 
   3.808729243533929*^9, 3.808729955234467*^9, 3.808734592132989*^9, 
   3.808744068812413*^9, 3.808744385263514*^9, 3.808763289039442*^9, {
   3.809350980145369*^9, 3.809350991772135*^9}, {3.809351029525825*^9, 
   3.8093510449411497`*^9}, {3.80935109613897*^9, 3.809351121018895*^9}, 
   3.809352629443512*^9, 3.809352748812767*^9, 3.809372669793426*^9, 
   3.809372787300371*^9, 3.809950434781528*^9, 3.811518957839505*^9, 
   3.8139243803473682`*^9, 3.813925142454804*^9, 3.814180035742366*^9, 
   3.8142656376060667`*^9, 3.8142658314210663`*^9, 3.8142671250602417`*^9, 
   3.814369826966015*^9, 3.814523181192223*^9, 3.815126387681988*^9, 
   3.819200419526333*^9, 3.819217212887122*^9, 3.819445239121958*^9, 
   3.8327744366703568`*^9, 3.832935644790865*^9, {3.8329357537420387`*^9, 
   3.832935811195483*^9}, {3.832935868255949*^9, 3.832935892768443*^9}, 
   3.832935978203761*^9, {3.8329360158395033`*^9, 3.832936033691207*^9}, 
   3.832936101124659*^9, 3.8329361415650587`*^9, 3.832936201495422*^9, 
   3.8329363911156683`*^9, {3.8329369843687973`*^9, 3.832937008222541*^9}, 
   3.832942719090598*^9, 3.832942988625823*^9, 3.832943584517415*^9, 
   3.832964850728894*^9, 3.833913173922515*^9, 3.833914025391197*^9, 
   3.833915060608219*^9, 3.834826220606721*^9, 3.840535539778367*^9, 
   3.840536949572945*^9, 3.840537988911845*^9, 3.840555735960724*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"56b42354-171c-4f6b-a237-98bb726fa84c"],

Cell[BoxData[
 StyleBox["\<\"Trait-based (predicted) TPC parameters:\"\>",
  StripOnInput->False,
  FontWeight->Bold]], "Output",
 CellChangeTimes->{
  3.800875354615192*^9, 3.800877605058736*^9, 3.800877704196621*^9, 
   3.800877765960993*^9, 3.8008782176052713`*^9, 3.800878407433702*^9, 
   3.800878484800215*^9, 3.800887261218145*^9, {3.800887804450946*^9, 
   3.800887807645751*^9}, 3.800887874913432*^9, 3.8008883251027527`*^9, {
   3.8008966925775757`*^9, 3.8008966969327374`*^9}, 3.80089879920186*^9, 
   3.801042797711218*^9, 3.801042841994577*^9, 3.801045543379752*^9, 
   3.801045643512643*^9, 3.8010456856603947`*^9, 3.801225537248824*^9, {
   3.801234567237781*^9, 3.801234593043948*^9}, 3.8012348473247023`*^9, 
   3.8012350059836617`*^9, 3.801237191008334*^9, 3.801237288233136*^9, 
   3.801237343199065*^9, {3.8012373788919153`*^9, 3.801237390759945*^9}, 
   3.8012402366933727`*^9, 3.801241570025679*^9, 3.8012444210105877`*^9, 
   3.8012977456196203`*^9, 3.801325462604744*^9, 3.801325500742433*^9, 
   3.801392117380476*^9, 3.80140322625802*^9, 3.801418090028645*^9, 
   3.801484039629258*^9, 3.801488863656836*^9, 3.8015695259712467`*^9, 
   3.8015714666056957`*^9, 3.80181809150881*^9, 3.801848282107244*^9, 
   3.801848382468974*^9, {3.802451480360199*^9, 3.8024514987148447`*^9}, 
   3.8025258525782223`*^9, {3.802629794508861*^9, 3.80262980942199*^9}, 
   3.802630013760799*^9, 3.802630327677354*^9, 3.802630436079822*^9, 
   3.80263108669055*^9, 3.802685254808473*^9, 3.803114553140108*^9, 
   3.804529185989497*^9, 3.804949464310033*^9, 3.8054777122381153`*^9, 
   3.8058874117530622`*^9, 3.8067545286044693`*^9, 3.806857390896677*^9, 
   3.806936344776291*^9, 3.8069365958046303`*^9, 3.806936834333488*^9, {
   3.806937225664072*^9, 3.806937281828784*^9}, {3.806937323923306*^9, 
   3.806937339087577*^9}, {3.806937406796329*^9, 3.806937441844521*^9}, 
   3.806937715308435*^9, {3.8069378158189383`*^9, 3.806937874264914*^9}, {
   3.80693794029607*^9, 3.806937972941087*^9}, 3.8081351141230783`*^9, 
   3.80813517830619*^9, 3.8082165583014812`*^9, 3.808581549936809*^9, 
   3.808585649579958*^9, 3.808586014300746*^9, 3.8085869268580427`*^9, {
   3.808649128377632*^9, 3.808649137918067*^9}, 3.808649762680884*^9, 
   3.808655787993203*^9, 3.808662901007818*^9, 3.808663542017501*^9, 
   3.808671528087851*^9, 3.808671627144945*^9, 3.808673670391539*^9, 
   3.808673799745295*^9, 3.80867388830761*^9, 3.8086740476742067`*^9, 
   3.8086742419417477`*^9, 3.808679599085845*^9, 3.8087284035509987`*^9, 
   3.808729243533929*^9, 3.808729955234467*^9, 3.808734592132989*^9, 
   3.808744068812413*^9, 3.808744385263514*^9, 3.808763289039442*^9, {
   3.809350980145369*^9, 3.809350991772135*^9}, {3.809351029525825*^9, 
   3.8093510449411497`*^9}, {3.80935109613897*^9, 3.809351121018895*^9}, 
   3.809352629443512*^9, 3.809352748812767*^9, 3.809372669793426*^9, 
   3.809372787300371*^9, 3.809950434781528*^9, 3.811518957839505*^9, 
   3.8139243803473682`*^9, 3.813925142454804*^9, 3.814180035742366*^9, 
   3.8142656376060667`*^9, 3.8142658314210663`*^9, 3.8142671250602417`*^9, 
   3.814369826966015*^9, 3.814523181192223*^9, 3.815126387681988*^9, 
   3.819200419526333*^9, 3.819217212887122*^9, 3.819445239121958*^9, 
   3.8327744366703568`*^9, 3.832935644790865*^9, {3.8329357537420387`*^9, 
   3.832935811195483*^9}, {3.832935868255949*^9, 3.832935892768443*^9}, 
   3.832935978203761*^9, {3.8329360158395033`*^9, 3.832936033691207*^9}, 
   3.832936101124659*^9, 3.8329361415650587`*^9, 3.832936201495422*^9, 
   3.8329363911156683`*^9, {3.8329369843687973`*^9, 3.832937008222541*^9}, 
   3.832942719090598*^9, 3.832942988625823*^9, 3.832943584517415*^9, 
   3.832964850728894*^9, 3.833913173922515*^9, 3.833914025391197*^9, 
   3.833915060608219*^9, 3.834826220606721*^9, 3.840535539778367*^9, 
   3.840536949572945*^9, 3.840537988911845*^9, 3.8405557359628468`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"a91cc394-528d-442c-a4a6-1f875fcaffed"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Species\"\>", "\<\"Biovolume_Spheroid_GEO\"\>", \
"\<\"Geodesic_Aspect_Ratio\"\>", "\<\"Sigma.Intensity\"\>", "\<\"a\"\>", \
"\<\"E_a\"\>", "\<\"E_d\"\>", "\<\"Th\"\>", "\<\"T_opt\"\>", "\<\"est_a\"\>", \
"\<\"est_Ea\"\>", "\<\"est_Ed\"\>", "\<\"est_Th\"\>", "\<\"est_K22\"\>"},
    {"\<\"Paramecium bursaria\"\>", "5.07415692319242`", 
     RowBox[{"-", "0.613943277512831`"}], "1.53756811488631`", 
     "2.32517568179013`", "0.0118191538653472`", "3.03999588369034`", 
     "315.023691029854`", "300.186904356038`", "2.41442935033733`", 
     "0.0828514811229515`", "3.52035942501157`", "311.256527044874`", 
     "64.1008935869455`"},
    {"\<\"Paramecium multimicronucleatum\"\>", "5.45260883544506`", 
     RowBox[{"-", "0.784922158340453`"}], "1.48042641961893`", 
     "2.32217401871413`", "0.0239633786620397`", "4.5534619117721`", 
     "312.64023020843`", "303.253985742119`", "2.33954414959826`", 
     "0.0551357429592652`", "2.91048956135619`", "313.886914110701`", 
     "56.4758246159856`"},
    {"\<\"Euplotes sp.\"\>", "5.14450212195411`", 
     RowBox[{"-", "0.906208043074347`"}], "1.56813071981433`", 
     "2.33323409981231`", "0.0442073490959228`", "3.00699419973139`", 
     "312.566977222232`", "301.243191759747`", "2.38963171620255`", 
     "0.0976754227617472`", "3.40699913962619`", "308.467051379774`", 
     "44.7141140563786`"},
    {"\<\"Blepharisma sp.\"\>", "4.58179250540193`", 
     RowBox[{"-", "0.854642372502999`"}], "1.38469709715585`", 
     "2.33052756162966`", "0.0177519222981723`", "4.0474043880807`", 
     "315.67567680888`", "304.59218025252`", "2.33430278171767`", 
     "0.00870364423417325`", "4.31379766808799`", "313.832100710061`", 
     "251.160309420542`"},
    {"\<\"Urocentrum turbo\"\>", "4.51686868074074`", 
     RowBox[{"-", "0.385428349410389`"}], "1.5344257837783`", 
     "2.3725586156647`", "0.0453340272362721`", "3.50637511260525`", 
     "306.889058571996`", "297.191255980066`", "2.47582853153013`", 
     "0.0813273396741279`", "4.41842148636501`", "310.671201212573`", 
     "129.243140019258`"},
    {"\<\"Colpidium striatum\"\>", "4.57855282399077`", 
     RowBox[{"-", "0.502706639456762`"}], "1.51128025206332`", 
     "2.49856639468046`", "0.0888436522671186`", "1.27075210661948`", 
     "309.442208409922`", "293.533309945894`", "2.44516094792311`", 
     "0.0701009402180014`", "4.31901836851661`", "311.075596747212`", 
     "133.355074796621`"},
    {"\<\"Paramecium aurelia\"\>", "5.05479008262986`", 
     RowBox[{"-", "0.720087895764627`"}], "1.5154413756494`", 
     "2.51421474100269`", "0.141601033744665`", "1.20940261071681`", 
     "310.790774926806`", "297.50709915989`", "2.39070562937535`", 
     "0.0721192319616926`", "3.55156881260067`", "311.377091365393`", 
     "72.045104822186`"},
    {"\<\"Paramecium caudatum\"\>", "5.20390595429598`", 
     RowBox[{"-", "0.831525361322874`"}], "1.55534481523434`", 
     "2.40149050195677`", "0.0867486737851561`", "6.12681578447665`", 
     "305.359582143397`", "299.905168675091`", "2.38855957857798`", 
     "0.0914738079537361`", "3.31127071031188`", "309.676046008187`", 
     "46.4479794764797`"},
    {"\<\"Tillina magna\"\>", "5.77953621831275`", 
     RowBox[{"-", "0.182649532006696`"}], "1.51983681612726`", 
     "2.39266642247853`", "0.0695119533153557`", "1.92410144096335`", 
     "319.587167624654`", "305.26749968635`", "2.41536352169194`", 
     "0.0742511756645933`", "2.38365074258012`", "317.435987473796`", 
     "38.5424346128475`"},
    {"\<\"Halteria grandinella\"\>", "4.0793568169973`", 
     RowBox[{"-", "0.604617994272419`"}], "1.52650130599036`", 
     "2.49703098386454`", "0.10783894029846`", "2.82975606254459`", 
     "306.101423650779`", "297.176116680691`", "2.4713256462548`", 
     "0.0774836883714022`", "5.12346562024349`", "307.890680216895`", 
     "201.791673858792`"},
    {"\<\"Cyclidium glaucoma\"\>", "3.03659870772428`", 
     RowBox[{"-", "0.27224806369748`"}], "1.5816607298599`", 
     "2.51221327211716`", "0.0851891443891883`", "7.15525273501005`", 
     "306.146219979093`", "301.248135780583`", "2.60645135938679`", 
     "0.104237954972602`", "6.8038554540339`", "303.786922772499`", 
     "503.144458403184`"},
    {"\<\"Colpoda steinii\"\>", "3.70217330092822`", 
     RowBox[{"-", "0.268105940522806`"}], "1.61152769776075`", 
     "2.61698246466673`", "0.140333052226265`", "3.88433010878129`", 
     "306.294138460513`", "299.621724629563`", "2.58151139709521`", 
     "0.118724488111139`", "5.73129148152372`", "305.220656764945`", 
     "204.930835584594`"},
    {"\<\"Glaucoma sp.\"\>", "4.18332356848211`", 
     RowBox[{"-", "0.299306371885183`"}], "1.57456611120974`", 
     "2.6305337868152`", "0.140107300986922`", "4.96193776036282`", 
     "305.955989756734`", "300.32077189195`", "2.52837316913229`", 
     "0.100796814629129`", "4.95592468175193`", "308.344496663574`", 
     "150.23912932952`"},
    {"\<\"Tetrahymena pyriformis\"\>", "4.11684196550311`", 
     RowBox[{"-", "0.302663673912558`"}], "1.57791826642165`", 
     "2.56777513221209`", "0.134054636189858`", "12.296591035385`", 
     "308.367680761141`", "305.398607963866`", "2.53383256575976`", 
     "0.102422728170938`", "5.06305883758975`", "307.933164816998`", 
     "158.061634909156`"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Right}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.800875354615192*^9, 3.800877605058736*^9, 3.800877704196621*^9, 
   3.800877765960993*^9, 3.8008782176052713`*^9, 3.800878407433702*^9, 
   3.800878484800215*^9, 3.800887261218145*^9, {3.800887804450946*^9, 
   3.800887807645751*^9}, 3.800887874913432*^9, 3.8008883251027527`*^9, {
   3.8008966925775757`*^9, 3.8008966969327374`*^9}, 3.80089879920186*^9, 
   3.801042797711218*^9, 3.801042841994577*^9, 3.801045543379752*^9, 
   3.801045643512643*^9, 3.8010456856603947`*^9, 3.801225537248824*^9, {
   3.801234567237781*^9, 3.801234593043948*^9}, 3.8012348473247023`*^9, 
   3.8012350059836617`*^9, 3.801237191008334*^9, 3.801237288233136*^9, 
   3.801237343199065*^9, {3.8012373788919153`*^9, 3.801237390759945*^9}, 
   3.8012402366933727`*^9, 3.801241570025679*^9, 3.8012444210105877`*^9, 
   3.8012977456196203`*^9, 3.801325462604744*^9, 3.801325500742433*^9, 
   3.801392117380476*^9, 3.80140322625802*^9, 3.801418090028645*^9, 
   3.801484039629258*^9, 3.801488863656836*^9, 3.8015695259712467`*^9, 
   3.8015714666056957`*^9, 3.80181809150881*^9, 3.801848282107244*^9, 
   3.801848382468974*^9, {3.802451480360199*^9, 3.8024514987148447`*^9}, 
   3.8025258525782223`*^9, {3.802629794508861*^9, 3.80262980942199*^9}, 
   3.802630013760799*^9, 3.802630327677354*^9, 3.802630436079822*^9, 
   3.80263108669055*^9, 3.802685254808473*^9, 3.803114553140108*^9, 
   3.804529185989497*^9, 3.804949464310033*^9, 3.8054777122381153`*^9, 
   3.8058874117530622`*^9, 3.8067545286044693`*^9, 3.806857390896677*^9, 
   3.806936344776291*^9, 3.8069365958046303`*^9, 3.806936834333488*^9, {
   3.806937225664072*^9, 3.806937281828784*^9}, {3.806937323923306*^9, 
   3.806937339087577*^9}, {3.806937406796329*^9, 3.806937441844521*^9}, 
   3.806937715308435*^9, {3.8069378158189383`*^9, 3.806937874264914*^9}, {
   3.80693794029607*^9, 3.806937972941087*^9}, 3.8081351141230783`*^9, 
   3.80813517830619*^9, 3.8082165583014812`*^9, 3.808581549936809*^9, 
   3.808585649579958*^9, 3.808586014300746*^9, 3.8085869268580427`*^9, {
   3.808649128377632*^9, 3.808649137918067*^9}, 3.808649762680884*^9, 
   3.808655787993203*^9, 3.808662901007818*^9, 3.808663542017501*^9, 
   3.808671528087851*^9, 3.808671627144945*^9, 3.808673670391539*^9, 
   3.808673799745295*^9, 3.80867388830761*^9, 3.8086740476742067`*^9, 
   3.8086742419417477`*^9, 3.808679599085845*^9, 3.8087284035509987`*^9, 
   3.808729243533929*^9, 3.808729955234467*^9, 3.808734592132989*^9, 
   3.808744068812413*^9, 3.808744385263514*^9, 3.808763289039442*^9, {
   3.809350980145369*^9, 3.809350991772135*^9}, {3.809351029525825*^9, 
   3.8093510449411497`*^9}, {3.80935109613897*^9, 3.809351121018895*^9}, 
   3.809352629443512*^9, 3.809352748812767*^9, 3.809372669793426*^9, 
   3.809372787300371*^9, 3.809950434781528*^9, 3.811518957839505*^9, 
   3.8139243803473682`*^9, 3.813925142454804*^9, 3.814180035742366*^9, 
   3.8142656376060667`*^9, 3.8142658314210663`*^9, 3.8142671250602417`*^9, 
   3.814369826966015*^9, 3.814523181192223*^9, 3.815126387681988*^9, 
   3.819200419526333*^9, 3.819217212887122*^9, 3.819445239121958*^9, 
   3.8327744366703568`*^9, 3.832935644790865*^9, {3.8329357537420387`*^9, 
   3.832935811195483*^9}, {3.832935868255949*^9, 3.832935892768443*^9}, 
   3.832935978203761*^9, {3.8329360158395033`*^9, 3.832936033691207*^9}, 
   3.832936101124659*^9, 3.8329361415650587`*^9, 3.832936201495422*^9, 
   3.8329363911156683`*^9, {3.8329369843687973`*^9, 3.832937008222541*^9}, 
   3.832942719090598*^9, 3.832942988625823*^9, 3.832943584517415*^9, 
   3.832964850728894*^9, 3.833913173922515*^9, 3.833914025391197*^9, 
   3.833915060608219*^9, 3.834826220606721*^9, 3.840535539778367*^9, 
   3.840536949572945*^9, 3.840537988911845*^9, 3.840555735964636*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"30945eb4-d7a9-4649-8590-9832252bc27b"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {GrayLevel[0.5], AbsoluteThickness[1.6], Opacity[1.], 
       Dashing[{Small, Small}], LineBox[CompressedData["
1:eJxNz30w03EYAPCVdq62XlbnZRbF5oRQjc2QbX4zGkZ6ud3JS8MxCbHcSFZX
cuUlHHf9sZ2UOefWriWM1NVx5bqVpVyXOJs2OmWXRESnusvz9dw999znnnue
5x5XcW58+kYcDhfzN//Vc699PboMmlDc/wi1NgeIeZXsNRsbGfU0ngKslcn7
8Dw12MlCTVjAesFCykKLFdODMxnj+mlsFDzf93b8M/YV3Gz5VRgk/Q0+nkHw
EZjwnDVT3G7KK8xE8H6VlLjM3gluyqfFdejtwIZCNvOqigx2TRoWJmY7g9NX
OzXORXvBDl90tg5iN7CUHjJa50UDi2dWBnZNu4PvhRXYNg56gJt/ZD1T13uC
F7mOr/rl3uAxnM2s6bQPOGd3bs1lqh9YIxl42lB2AFw8R/7pLTkInhfwT75I
PgRmJdRyLUfp4CGyMquf7g92arnS27ovAKwzekULtzLALu++ZRTOINMbatV3
jUywctOcb11fILiT6zdS1s0C32LeIK20BYEHP6qu0SuDwR0xClrepRDw7Nlj
uJy0w+gfvmemFQsFt858WCxgsMGiJlVqIpEDbn8QlWxTjsyiDC1dX0KmGjNG
3ki4YDPhTKziE7KhWpgacSIMXC9rJJw3IPc+WV1KPYKBt5/ilNN7kFkp1tYy
fx64+lGJRNeCHFHglKe2Dwe/r3UnUGuQ62xJ4cUb+Oje97EEqQ3y1Fhbfg4e
OeQh77Z4M/JkimxZQEIO7hnXUlyRzdkal8cc5G2iCwFdYcgsLDJay0OuJk8U
qSKRA5/bDVfFIVftuViRlIKs2yK4IxIjT8zbd8enrZvX35/kZ67ry8xcvzxk
YppW5JmPzIwtzaVKkSvdHZUOMuTOHZZ2UjGyaVn7klCybt9UqQlfiswYilpc
lSP/AZrUDWI=
        "]]},
      Annotation[#, "Charting`Private`Tag$2503#1"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1:eJwV13c8Vf8fB/CbjJSyyyxSCSUrm8/Hxa0QkgqphJQSWkilm5JIVlZJ9A1Z
CaWEOse+7r1GZoNCdtlZIb/37y+P5+P1Hueee8Yl6+xlc4qDQqHsXUGh/P/v
hXpl+XeNuYYUlnuGSTuDMBxN3e1sEoawen6CeAOD6ErWjNli8gSRZtfzR6sZ
RL7fzQoukxxEV33k+Ogtg5Dokzs6Y1yK8H8NCeOxDMJSciZ91JiNKM4GGem2
DOKM5g/2sHEHIjNiJVWbaojpiuYfg8a/EV3lohhRV02k9v310b28hOjJoT1q
iZWE7ek1O826uTBFRLEnJrKckNwccfN+Lx+mC6bmvYomiR1pl/kWkBCmEOU3
0j6XEs8ubrEuZIti+v3FjNtfi4hGH6R1J00cUwwfYOewN4Ts8VbLYx7SmG7L
urZwJI84tfw2V/qqDKb41psPdGcQG34V8Wxw3owpJk+5zH1SiMvq+h3Rilsw
pXHYIntvFOE8ssgQHt6KKZGNg/W6TsRL6iWe5AZ5TOktFbD7HoZS/5wty4lR
wJQAM9drhUlozkisrvKmEqao5XEair5AnZSVE90nd2KKxjnZ7ZKvkKeUV+Qt
uV2Ywl8jYGPyGuW6M8jYIBVM3+v0MJf6DvlPic8quatiequBnNBUMZo2ox2u
OaGG6d1q0Wv7PiKdo1FGfQfUMfn82sts+zLUJJ50tlJdA1Pqd8hPilYgifTb
pRnbd2NKsnxfxmAlKupStLBcq4lJecMLhiHVaGPL+GmfEfD71uy+VQykHhuV
87xLC1MSwxwfB9aicYlEt129Wph+Vr/pQ3Atyk1JlSkZ0MLk5mnd72G1SDHn
XUzTKLjmQqtofC2Sqei8vmIJnLxQeiK7Fq2bUNh/Qlwbk2z7dw7NtWjQonxE
wkYb04kvmg0yTJTexHqRfkgbUxSMOu5tZSIXu9aTavbaGB87MWSoyETfXQZb
9zlBfVuFfIo6E7X6r/vo5wnzmN25mjQmKs9wCG8LhTyj+emrs0yUxDmlHF0B
/eW33F/mMVH0dPKSew3Uf0gSMS1korv9FmwjFuzbyahsf89Enox094km6M98
u2G0nIlwmEOqdQ/0exV/6Gxhol7hcnH+FToYv2qKLZ9lIkW5KM4wQ/CVjXEe
Oiy0UcSw2YUKXv/L6LABCwlz/XqmR9PBdM2r8zpGLLTYb4J+7deB7yPbfWwv
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
Sv0VaVKzyXxu+SYN30no0EqjS5P/Aw8zkYI=
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#1"]& ], 
     TagBox[
      {RGBColor[
       0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#2"]& ], 
     TagBox[
      {RGBColor[
       0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
xq2bpufOsDC/wU/49Bo18n/NT/ps
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#3"]& ], 
     TagBox[
      {RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#4"]& ], 
     TagBox[
      {RGBColor[0.27450980392156865`, 0.8588235294117647, 0.7411764705882353],
        AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
UJ4RSNik1ubPZLAIFiw+imoJ/w/lwMlW
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#5"]& ], 
     TagBox[
      {RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
iP0PoqUXWg==
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#6"]& ], 
     TagBox[
      {RGBColor[
       0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
+/Ci1A==
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#7"]& ], 
     TagBox[
      {RGBColor[0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#8"]& ], 
     TagBox[
      {RGBColor[1., 0.8352941176470589, 0.], AbsoluteThickness[1.6], Opacity[
       1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#9"]& ], 
     TagBox[
      {RGBColor[0.7764705882352941, 0.5764705882352941, 0.32941176470588235`],
        AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
f1A1tGAJG65F2UUse0rFNRlnNqQqs8Ftf/y8tGdUbFk/oRWpyobalv5BUUzF
BsvftDM12DDKb2r7XkPFKq3HmB3L2dA8GuF5pY6Kh80/L5EwYYOA+fh47nsq
Tpqf+dTfhQ0avnp7swfI/tdIXtu4lQ0XghzrBgapOM4jMsxoOxtUs4zKdIap
OLLUaeWcOxt8krw33vtB8t8zL+WKDxscNz0+fW2Cio1e+/i9PMCGS0PokOEf
Km5NWb6IlswGm8dpJ/dI03AhkgoYSGHDkoTGZUEyNBz349eL+5fYkMg5lR0q
S8OGdi+iGVfZoKT1PDhCjoYThXwnNt4m9l/BSoeW0DAnJLM9soANxj45pUiD
hksd1PLe1rFhytv/zOLVNHzh93yRtNckX91xNo+wT96Qt1s9GwzoaTKf9GlY
VrhSrbeRDceU1F/eNqDhoCeuSdMf2ZC0v7JF3ZiGaTpXIrT62BCCo3aNmNNw
6sLF7KPzOJCYpMb9up6GqyY+e4Qv4MCJY3frn9nS8PfP98KCRThgrMdsSLej
YctSVqaPOAeKXIoLttrTcL9X5MyGxRyIS+GIPnGkYYvKryVqmhx47rLVYOtW
Gu4NKtR4CkTvWfLxRm8alnY9ZlJmwwHZoCqTJB8aNmPaOpSwOOBY0SDi6Evq
odJ9JNuWA6dDBsfr/GiY8UrxQ4ITB4xinyqV+tNwwrLjFzy9OKBe8vaU134a
LpfY8I+rDweClHYz5IJpuHtqScVmPw6stIhSfE6YUV/czwnggGen7kZqKLFH
9lqvCeXArmiHtx/DaFjSr8RVO4wD1TcLuk8cpGH6pugQWjgH6hVCVuqF0/DF
5cq3lCJJ/NV8dvQhGn4s2/dw8VEOZGvlaa6IoOFvMyWvF0VxoEc7dW0DYcnv
0d9EojnQaZEXcfAwDZs22wvmYjigb9c5rhxJw/8Dhgv9Nw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#10"]& ], 
     TagBox[
      {RGBColor[1., 0.4980392156862745, 0.], AbsoluteThickness[1.6], Opacity[
       1.], LineBox[CompressedData["
1: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
wMUyZuJ/6zWbTS0G8IB/vVl7KfZ/fqEgsQ==
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#11"]& ], 
     TagBox[
      {RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
a+vs4jE+eNtwAlJw/h/9d7K/
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#12"]& ], 
     TagBox[
      {RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
85b10/MnBfAjbUVzOfb/AKDnQKU=
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#13"]& ], 
     TagBox[
      {RGBColor[
       0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
       AbsoluteThickness[1.6], Opacity[1.], LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3168#14"]& ]}, {}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
3g==
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#1"]& ], 
     TagBox[
      {RGBColor[
       0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#2"]& ], 
     TagBox[
      {RGBColor[
       0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
/wGEXeJ5
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#3"]& ], 
     TagBox[
      {RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#4"]& ], 
     TagBox[
      {RGBColor[0.27450980392156865`, 0.8588235294117647, 0.7411764705882353],
        AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#5"]& ], 
     TagBox[
      {RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
pBFWTesmZ+O4UKRaVFDAohH/A4M0cog=
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#6"]& ], 
     TagBox[
      {RGBColor[
       0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#7"]& ], 
     TagBox[
      {RGBColor[0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#8"]& ], 
     TagBox[
      {RGBColor[1., 0.8352941176470589, 0.], AbsoluteThickness[1.6], Opacity[
       1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
Er6T5ew1poLI77l/RO4TBdRKm589aiR/SGanOWH68yUJTRqI2LVcwZPwqQBN
/UotxG6XAINDhJ9NS9TnzEEM9FcQjycslzG14fRc8v172co0wpuWfv56UA8x
4tUSnQuEsx51xnrrk+PJW2l3jnCvd6PmmvmI5a8Htc8QNpioqDQmz1G5i9TV
cMJ7k/LWahsS/bobn/oSvjU/pX/WErKedSSZTnj83oljo0tJfse5X1QJW7kH
KfYsR+QKpl4OEn1RI1uvPzFCdEi4yqgg/CjekVmxkuhxrDE6RFhqrsXbbFNE
3eT2i8sIu1QvCI03I37+iA7mE38zXFSkDlqQfCbO5QmE3w6K5HtZET9dOBtW
ENaNHrNkWRP/dmx0eU7Oa6d630sjOtH38J/L2whfL2/bQ+xCNr/R4js5f4HD
/RmzmCTeL0b1IGGzvtJLAluSX8bAaIT0z/Gj2cbv7Mn3HbNPBhCedT1ie7kj
iZ+vl2lG+m0dczeV5YSYaju6KYP0Z9rbzWlx60m/5G5e+JX0r7a0yYOtbkRv
yuDwCdLv2wv0PO03IjZXJ7bXv6Xg2mr50RWbEaOt7t4cfUOBcdCwrpgnYl4+
fZE9mZcw0Z6aH1tJ/OhgtT+Zp4acZ65vvREl9hfpRJB5Y7UWR9/yI/VxS93O
dpL+Xu7P9wwkAoN4B5zI/OY/cY2w20v2F1/UvYDM96AvyK8IIvqTL3VTrRSE
pmijaAjpnyzvk/HPKWALXl8pCyf5ElWOWj6h4AX7sfmlo4Qn1Kt5jyhQ0rvT
9s9x0k/m3LXbGkm/u6X99YhCdLV84ebPpeB2pdM2kdPEv827Jv6rpcC95e7R
Vjap172tOaiG3I8DczMunkUcylXsbCf3m7XGePOSZET5kcSw0+T+exSVs3LT
eRKPKobppWS+L81ar3OR+PHRlOKS+1TidsjuoUzSD92xTwdLiP+f7XIic8g8
l55wnlNE7q91w2JFBSS/5T39hbnEv11bdIOLEC222qxQyaZAPfqBlWUxmQ85
nZnTmcSv2+eDW6+T/g2267uZQcGABv3NRAX5/s5/dbcSKJj8nFzK4iLypJZG
zomgIJNGPZF/SPwYgwunyHtjpRnQ97aRcG7VzI+hFJxcb64a3ET0Z/+4E7ef
AvE7vVEXX5D75WpS6XZ/sn+M0cahHtLfUc2O+9dSUJeVtb/yA9Hb9pPGWkPq
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
HNes3Un4N4qFdspPbwycluP+D/kreDY=
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#9"]& ], 
     TagBox[
      {RGBColor[0.7764705882352941, 0.5764705882352941, 0.32941176470588235`],
        AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
qjTvC8Rm9SuGxfuFEDDRqfuQ+H/B8apE
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#10"]& ], 
     TagBox[
      {RGBColor[1., 0.4980392156862745, 0.], AbsoluteThickness[1.6], Opacity[
       1.], Dashing[{Small, Small}], LineBox[CompressedData["
1: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
gcAW18YVazfum12+yIGygJOCY8j/A14NTas=
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#11"]& ], 
     TagBox[
      {RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
Uoxt0LBtauEUD7wbhl2fY/8PD3g7Kw==
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#12"]& ], 
     TagBox[
      {RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#13"]& ], 
     TagBox[
      {RGBColor[
       0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
       AbsoluteThickness[1.6], Opacity[1.], Dashing[{Small, Small}], 
       LineBox[CompressedData["
1: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
SOfNrrnFQB4oFjQ2byT4f7aNXjg=
        "]]},
      Annotation[#, "Charting`Private`Tag$3237#14"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      StyleBox["\"r\"", 16, StripOnInput -> False], TraditionalForm], None}, {
     FormBox[
      StyleBox["\"Temperature (C)\"", 16, StripOnInput -> False], 
      TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  FrameTicksStyle->Directive[18],
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->800,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 43}, {-1, Automatic}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.800875354615192*^9, 3.800877605058736*^9, 3.800877704196621*^9, 
   3.800877765960993*^9, 3.8008782176052713`*^9, 3.800878407433702*^9, 
   3.800878484800215*^9, 3.800887261218145*^9, {3.800887804450946*^9, 
   3.800887807645751*^9}, 3.800887874913432*^9, 3.8008883251027527`*^9, {
   3.8008966925775757`*^9, 3.8008966969327374`*^9}, 3.80089879920186*^9, 
   3.801042797711218*^9, 3.801042841994577*^9, 3.801045543379752*^9, 
   3.801045643512643*^9, 3.8010456856603947`*^9, 3.801225537248824*^9, {
   3.801234567237781*^9, 3.801234593043948*^9}, 3.8012348473247023`*^9, 
   3.8012350059836617`*^9, 3.801237191008334*^9, 3.801237288233136*^9, 
   3.801237343199065*^9, {3.8012373788919153`*^9, 3.801237390759945*^9}, 
   3.8012402366933727`*^9, 3.801241570025679*^9, 3.8012444210105877`*^9, 
   3.8012977456196203`*^9, 3.801325462604744*^9, 3.801325500742433*^9, 
   3.801392117380476*^9, 3.80140322625802*^9, 3.801418090028645*^9, 
   3.801484039629258*^9, 3.801488863656836*^9, 3.8015695259712467`*^9, 
   3.8015714666056957`*^9, 3.80181809150881*^9, 3.801848282107244*^9, 
   3.801848382468974*^9, {3.802451480360199*^9, 3.8024514987148447`*^9}, 
   3.8025258525782223`*^9, {3.802629794508861*^9, 3.80262980942199*^9}, 
   3.802630013760799*^9, 3.802630327677354*^9, 3.802630436079822*^9, 
   3.80263108669055*^9, 3.802685254808473*^9, 3.803114553140108*^9, 
   3.804529185989497*^9, 3.804949464310033*^9, 3.8054777122381153`*^9, 
   3.8058874117530622`*^9, 3.8067545286044693`*^9, 3.806857390896677*^9, 
   3.806936344776291*^9, 3.8069365958046303`*^9, 3.806936834333488*^9, {
   3.806937225664072*^9, 3.806937281828784*^9}, {3.806937323923306*^9, 
   3.806937339087577*^9}, {3.806937406796329*^9, 3.806937441844521*^9}, 
   3.806937715308435*^9, {3.8069378158189383`*^9, 3.806937874264914*^9}, {
   3.80693794029607*^9, 3.806937972941087*^9}, 3.8081351141230783`*^9, 
   3.80813517830619*^9, 3.8082165583014812`*^9, 3.808581549936809*^9, 
   3.808585649579958*^9, 3.808586014300746*^9, 3.8085869268580427`*^9, {
   3.808649128377632*^9, 3.808649137918067*^9}, 3.808649762680884*^9, 
   3.808655787993203*^9, 3.808662901007818*^9, 3.808663542017501*^9, 
   3.808671528087851*^9, 3.808671627144945*^9, 3.808673670391539*^9, 
   3.808673799745295*^9, 3.80867388830761*^9, 3.8086740476742067`*^9, 
   3.8086742419417477`*^9, 3.808679599085845*^9, 3.8087284035509987`*^9, 
   3.808729243533929*^9, 3.808729955234467*^9, 3.808734592132989*^9, 
   3.808744068812413*^9, 3.808744385263514*^9, 3.808763289039442*^9, {
   3.809350980145369*^9, 3.809350991772135*^9}, {3.809351029525825*^9, 
   3.8093510449411497`*^9}, {3.80935109613897*^9, 3.809351121018895*^9}, 
   3.809352629443512*^9, 3.809352748812767*^9, 3.809372669793426*^9, 
   3.809372787300371*^9, 3.809950434781528*^9, 3.811518957839505*^9, 
   3.8139243803473682`*^9, 3.813925142454804*^9, 3.814180035742366*^9, 
   3.8142656376060667`*^9, 3.8142658314210663`*^9, 3.8142671250602417`*^9, 
   3.814369826966015*^9, 3.814523181192223*^9, 3.815126387681988*^9, 
   3.819200419526333*^9, 3.819217212887122*^9, 3.819445239121958*^9, 
   3.8327744366703568`*^9, 3.832935644790865*^9, {3.8329357537420387`*^9, 
   3.832935811195483*^9}, {3.832935868255949*^9, 3.832935892768443*^9}, 
   3.832935978203761*^9, {3.8329360158395033`*^9, 3.832936033691207*^9}, 
   3.832936101124659*^9, 3.8329361415650587`*^9, 3.832936201495422*^9, 
   3.8329363911156683`*^9, {3.8329369843687973`*^9, 3.832937008222541*^9}, 
   3.832942719090598*^9, 3.832942988625823*^9, 3.832943584517415*^9, 
   3.832964850728894*^9, 3.833913173922515*^9, 3.833914025391197*^9, 
   3.833915060608219*^9, 3.834826220606721*^9, 3.840535539778367*^9, 
   3.840536949572945*^9, 3.840537988911845*^9, 3.840555737452424*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"a73c8e40-f254-419c-b91a-123e5396e60a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Numerical equilibria | multi-species w/ TPCs", "Section",
 CellChangeTimes->{{3.801240196890531*^9, 3.801240224434568*^9}, {
  3.801578322797502*^9, 
  3.801578343627101*^9}},ExpressionUUID->"148771db-1105-41f3-99c4-\
b84518eecbea"],

Cell[CellGroupData[{

Cell["model functions", "Subsection",
 CellChangeTimes->{{3.806841404839616*^9, 3.806841411031802*^9}, 
   3.806841448874751*^9, {3.80866264749477*^9, 3.808662670477282*^9}, {
   3.808662724230516*^9, 
   3.808662726099922*^9}},ExpressionUUID->"8acc792b-2a2e-48d0-9ea8-\
0af1a7af8c71"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TPCeqn", "[", 
    RowBox[{"T_", ",", "a_", ",", "Ea_", ",", "Ed_", ",", "Th_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Exp", "[", 
     RowBox[{"a", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Ea", "/", 
         RowBox[{"(", 
          RowBox[{"8.6", "*", 
           RowBox[{"10", "^", 
            RowBox[{"-", "5"}]}]}], ")"}]}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", "298.15"}], "-", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"T", "+", "273.15"}], ")"}]}]}], ")"}]}], "-", 
      RowBox[{"Log", "[", 
       RowBox[{"1", "+", 
        RowBox[{"Exp", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Ed", "/", 
            RowBox[{"(", 
             RowBox[{"8.6", "*", 
              RowBox[{"10", "^", 
               RowBox[{"-", "5"}]}]}], ")"}]}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "/", "Th"}], "-", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"T", "+", "273.15"}], ")"}]}]}], ")"}]}], "]"}]}], 
       "]"}]}], "]"}], "-", "10"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TPCfunc", "[", 
    RowBox[{"T_", ",", "SpNum_", ",", "TPCversion_"}], "]"}], ":=", 
   RowBox[{"TPCeqn", "@@", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", "T", "}"}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"TPCversion", "\[Equal]", "\"\<empirical\>\""}], ",", 
        RowBox[{"TPCparams", "[", 
         RowBox[{"[", 
          RowBox[{"SpNum", ",", 
           RowBox[{"2", ";;", "5"}]}], "]"}], "]"}], ",", 
        RowBox[{"TPCparamsPredicted", "[", 
         RowBox[{"[", 
          RowBox[{"SpNum", ",", 
           RowBox[{"10", ";;", "13"}]}], "]"}], "]"}]}], "]"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"feasibleSpp", "[", 
     RowBox[{"sppInit_", ",", "T_", ",", "\[Delta]_", ",", "TPCversion_"}], 
     "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"TPCfunc", "[", 
           RowBox[{"T", ",", "#", ",", "TPCversion"}], "]"}], "-", 
          "\[Delta]"}], ">", "0"}], ",", "#", ",", "Nothing"}], "]"}], "&"}], 
     "/@", "sppInit"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eqns", "[", 
    RowBox[{
    "T_", ",", "\[Alpha]_", ",", "\[Alpha]version_", ",", "\[Delta]_", ",", 
     "sppSet_", ",", "sppInit_", ",", "TPCversion_", ",", "Kversion_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "feasSpp", ",", "tempSpp", ",", "tempNSpp", ",", "\[Alpha]Values", ",", 
       "kTotal", ",", "kValues", ",", "\[Alpha]Matrix"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"feasSpp", "=", 
       RowBox[{"feasibleSpp", "[", 
        RowBox[{"sppInit", ",", "T", ",", "\[Delta]", ",", "TPCversion"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tempSpp", "=", 
       RowBox[{"Which", "[", 
        RowBox[{
         RowBox[{"sppSet", "\[Equal]", "\"\<all\>\""}], ",", "sppInit", ",", 
         RowBox[{"sppSet", "\[Equal]", "\"\<feasible\>\""}], ",", "feasSpp"}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tempNSpp", "=", 
       RowBox[{"Length", "[", "tempSpp", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]Values", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", "\[Equal]", "j"}], ",", "1", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"\[Alpha]version", "\[Equal]", "\"\<constant\>\""}], ",",
              "\[Alpha]", ",", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{
               RowBox[{"NormalDistribution", "[", 
                RowBox[{"\[Alpha]", ",", "0.001"}], "]"}], ",", "1"}], 
              "]"}]}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "tempNSpp"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "tempNSpp"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"kTotal", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"TPCversion", "\[Equal]", "\"\<empirical\>\""}], ",", 
         RowBox[{"Total", "[", 
          RowBox[{"demoRaw", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"2", ";;"}], ",", "5"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"Total", "[", 
          RowBox[{"TPCparamsPredicted", "[", 
           RowBox[{"[", 
            RowBox[{";;", ",", "14"}], "]"}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"kValues", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Kversion", "\[Equal]", "\"\<empirical\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"TPCversion", "\[Equal]", "\"\<empirical\>\""}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "/", "kTotal"}], "&"}], "/@", 
            RowBox[{
             RowBox[{"demoRaw", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"2", ";;"}], ",", "5"}], "]"}], "]"}], "[", 
             RowBox[{"[", "tempSpp", "]"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"#", "/", "kTotal"}], "&"}], "/@", 
            RowBox[{
             RowBox[{"TPCparamsPredicted", "[", 
              RowBox[{"[", 
               RowBox[{";;", ",", "14"}], "]"}], "]"}], "[", 
             RowBox[{"[", "tempSpp", "]"}], "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"1", ",", "tempNSpp"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]Matrix", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"\"\<(\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"\[Alpha]Values", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}], "<>", "\"\<*\>\"", 
          "<>", "\"\<n\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"tempSpp", "[", 
            RowBox[{"[", "j", "]"}], "]"}], "]"}], "<>", "\"\</\>\"", "<>", 
          RowBox[{"ToString", "[", 
           RowBox[{"kValues", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", "\"\<)\>\""}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "tempNSpp"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "tempNSpp"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ToString", "[", 
          RowBox[{"TPCfunc", "[", 
           RowBox[{"T", ",", 
            RowBox[{"tempSpp", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", "TPCversion"}], "]"}], 
          "]"}], "<>", "\"\<*n\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"tempSpp", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "<>", "\"\<*(1-(\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"Total", "[", 
           RowBox[{"\[Alpha]Matrix", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], "<>", "\"\<))-\>\"",
          "<>", 
         RowBox[{"ToString", "[", "\[Delta]", "]"}], "<>", "\"\<*n\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"tempSpp", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "tempSpp", "]"}]}], "}"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"eqFunc", "[", 
   RowBox[{
   "T_", ",", "\[Alpha]_", ",", "\[Alpha]version_", ",", "\[Delta]_", ",", 
    "sppSet_", ",", "sppInit_", ",", "TPCversion_", ",", "Kversion_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "stateVarsInit", ",", "tempSpp", ",", "stateVars", ",", "sols1", ",", 
      "sols2", ",", "sols", ",", "persistenceTest"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"stateVarsInit", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"\"\<n\>\"", "<>", 
         RowBox[{"ToString", "[", "i", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "sppInit"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tempSpp", "=", 
      RowBox[{"feasibleSpp", "[", 
       RowBox[{"sppInit", ",", "T", ",", "\[Delta]", ",", "TPCversion"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"stateVars", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<n\>\"", "<>", 
           RowBox[{"ToString", "[", "i", "]"}]}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "tempSpp"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sols1", "=", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "stateVars", "]"}], "\[Equal]", "0"}], ",", 
         RowBox[{"{", 
          RowBox[{"Null", "\[Rule]", "Null"}], "}"}], ",", 
         RowBox[{"FindRoot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"ToExpression", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "<>", "\"\<==0\>\""}], "&"}], "/@", 
               RowBox[{"eqns", "[", 
                RowBox[{
                "T", ",", "\[Alpha]", ",", "\[Alpha]version", ",", "\[Delta]",
                  ",", "\"\<feasible\>\"", ",", "sppInit", ",", "TPCversion", 
                 ",", "Kversion"}], "]"}]}], "]"}], "//", "Simplify"}], "//", 
            "Rationalize"}], ",", 
           RowBox[{"ToExpression", "[", "stateVars", "]"}]}], "]"}]}], "]"}], 
       "//", "Quiet"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sols2", "=", 
      RowBox[{
       RowBox[{"sols1", "/.", 
        RowBox[{
         RowBox[{"x_", "/;", 
          RowBox[{"NumericQ", "[", "x", "]"}]}], "\[RuleDelayed]", 
         RowBox[{"Round", "[", 
          RowBox[{"x", ",", 
           RowBox[{"10", "^", 
            RowBox[{"-", "6"}]}]}], "]"}]}]}], "//", "N"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"sols", "=", 
      RowBox[{"Select", "[", 
       RowBox[{"sols2", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ">", "0"}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"persistenceTest", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Select", "[", 
           RowBox[{"sols", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", 
              RowBox[{"ToExpression", "[", "i", "]"}]}], "&"}]}], "]"}]}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "stateVarsInit"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"persistenceTest", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "\[Equal]", "1"}], 
         ",", 
         RowBox[{"persistenceTest", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"ToExpression", "[", 
           RowBox[{"persistenceTest", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], "\[Rule]", "0"}]}],
         "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"Length", "[", "persistenceTest", "]"}]}], "}"}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8087324739472713`*^9, 3.808732483195661*^9}, 
   3.808732531128582*^9, 3.8087331539849377`*^9, 3.808733255565242*^9, {
   3.808750575285922*^9, 3.808750576790175*^9}, {3.808751742529002*^9, 
   3.808751745056987*^9}, {3.808751782827663*^9, 3.808751802299026*^9}, {
   3.80875191123639*^9, 3.808751948863648*^9}, {3.808751999426011*^9, 
   3.808752073649948*^9}, {3.808754276939197*^9, 3.8087543123130093`*^9}, {
   3.813935954415492*^9, 3.813935961315159*^9}, {3.8139361177459793`*^9, 
   3.813936120672484*^9}, 3.813939867166272*^9, {3.81394074984732*^9, 
   3.813940771480811*^9}, {3.813940896519455*^9, 3.813940965444044*^9}, 
   3.813942330849975*^9, {3.813997386004055*^9, 3.81399740533053*^9}, 
   3.814001923504397*^9, {3.8140020653794193`*^9, 3.814002099061433*^9}, 
   3.81418086814855*^9, {3.814180971015341*^9, 3.814180990919312*^9}, {
   3.814199183668852*^9, 3.8141991901520653`*^9}, 3.814199264163066*^9, {
   3.814199485251361*^9, 3.814199485818933*^9}, {3.8142004556261797`*^9, 
   3.814200502937049*^9}, 3.814208030515935*^9, {3.8151264209701138`*^9, 
   3.8151264213650217`*^9}, {3.8151286148718023`*^9, 3.815128617157323*^9}, {
   3.8192003924714537`*^9, 3.819200413775385*^9}, {3.819570360176963*^9, 
   3.819570371751533*^9}, {3.8327744672540083`*^9, 3.832774471683116*^9}, {
   3.832774812210906*^9, 3.832774836329837*^9}, {3.832774902800775*^9, 
   3.832774910017119*^9}, {3.8327749887288218`*^9, 3.8327750055773487`*^9}, {
   3.832841716816451*^9, 3.83284171842665*^9}, {3.832937145006505*^9, 
   3.8329371456529083`*^9}, {3.832937186856245*^9, 3.832937226144899*^9}, {
   3.83294318944484*^9, 3.832943209058185*^9}, {3.8329433860636272`*^9, 
   3.83294347579078*^9}, {3.832943983599578*^9, 3.8329439851425743`*^9}, {
   3.832955705664359*^9, 3.832955723087751*^9}, 3.832956593176011*^9, {
   3.832956752003277*^9, 3.83295676756271*^9}, {3.833914760528695*^9, 
   3.8339147753226557`*^9}, {3.833915108513712*^9, 3.833915165947811*^9}, {
   3.833915514471428*^9, 3.833915550780588*^9}, {3.8339159271167393`*^9, 
   3.83391595690406*^9}, {3.833916404378285*^9, 3.833916407373246*^9}, {
   3.83391679116796*^9, 3.833916793434525*^9}, {3.833917924244602*^9, 
   3.833917926189218*^9}, {3.8348262561549463`*^9, 3.8348262578453093`*^9}, {
   3.834835431399067*^9, 3.834835436421232*^9}, {3.834835701216393*^9, 
   3.8348357056498117`*^9}, {3.840537673708391*^9, 3.840537727548616*^9}, {
   3.840537919452911*^9, 3.8405379480737257`*^9}, {3.840538044538371*^9, 
   3.840538071825157*^9}, {3.840538116216394*^9, 3.840538218472205*^9}, {
   3.84053825024863*^9, 3.840538262002574*^9}, {3.8405382962358627`*^9, 
   3.840538460575205*^9}, {3.840538502429298*^9, 3.840538507922225*^9}, {
   3.840538562421254*^9, 3.840538761558506*^9}, 3.8405388023306093`*^9, 
   3.840538832414782*^9, {3.840538867383543*^9, 3.840538890017105*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"cd068fdc-dd8f-4b42-a78a-cb07b7158a2b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["calculate equilibria for range of parameters", "Subsection",
 CellChangeTimes->{{3.806841404839616*^9, 3.806841411031802*^9}, 
   3.806841448874751*^9, {3.80866264749477*^9, 3.808662670477282*^9}, {
   3.808667255843893*^9, 3.808667259018833*^9}, {3.808733793736527*^9, 
   3.808733799414721*^9}, {3.809353198559423*^9, 3.809353218917799*^9}, 
   3.8142656779091997`*^9, 
   3.840542499624426*^9},ExpressionUUID->"0692397a-b6d1-488e-8f0a-\
d1d69673252a"],

Cell[TextData[StyleBox["Small version (Figures 5/S4 A & E-G):",
 FontWeight->"Bold"]], "Text",
 CellChangeTimes->{{3.814275047315693*^9, 3.814275054814814*^9}, {
  3.840541139970407*^9, 3.840541168152254*^9}, {3.840541272793642*^9, 
  3.840541294936903*^9}, {3.8405419381852407`*^9, 
  3.840541938836071*^9}},ExpressionUUID->"b5b56942-3a5c-4f35-9ddb-\
d530bf7fab01"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"time1", "=", 
    RowBox[{"SessionTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Temps", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"7", ",", "41", ",", "0.1"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"choose", " ", "temperature", " ", "range"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]s", "=", 
    RowBox[{"{", "0.01", 
     RowBox[{"(*", 
      RowBox[{",", " ", "0.1", ",", "1."}], "*)"}], "}"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"choose", " ", "competition", " ", "parameter", " ", "set"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Delta]s", "=", 
    RowBox[{"{", 
     RowBox[{"0.01", ",", "0.1", 
      RowBox[{"(*", 
       RowBox[{",", "0.5"}], "*)"}], ",", "1."}], "}"}]}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{"choose", " ", "mortality", " ", "parameter", " ", "set"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[Alpha]version", "=", "\"\<constant\>\""}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
    "choose", " ", "\"\<constant\>\"", " ", "or", " ", "\"\<random\>\""}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"TPCversion", "=", "\"\<empirical\>\""}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
    "choose", " ", "\"\<empirical\>\"", " ", "or", " ", "\"\<predicted\>\""}],
     " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"Kversion", "=", "\"\<empirical\>\""}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "choose", " ", "\"\<empirical\>\"", " ", "or", " ", "\"\<constant\>\""}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sppInit", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"1", ",", 
      RowBox[{"Length", "[", "sppOrder", "]"}]}], "]"}]}], 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
     "1", ",", "2", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", ",", 
      "11", ",", "13", ",", "14"}], "}"}], "*)"}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"choose", " ", "initial", " ", "species", " ", 
      RowBox[{"set", ":", " ", "\[IndentingNewLine]", 
       RowBox[{
       "For", " ", "comparison", " ", "with", " ", "experimental", " ", 
        "communities", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Figures", " ", 
           RowBox[{"5", "/", "S4"}], " ", "E"}], "-", "G"}], ")"}], " ", 
        "use", " ", 
        RowBox[{"{", 
         RowBox[{
         "1", ",", "2", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10", 
          ",", "11", ",", "13", ",", "14"}], "}"}]}]}]}], ",", " ", 
     RowBox[{"otherwise", " ", "use", " ", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "sppOrder", "]"}]}], "]"}]}]}], " ", "*)"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"out", "=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"{", 
          RowBox[{"n", ",", "T", ",", "\[Alpha]", ",", "\[Delta]", ",", 
           RowBox[{
            RowBox[{"eqFunc", "[", 
             RowBox[{
             "T", ",", "\[Alpha]", ",", "\[Alpha]version", ",", "\[Delta]", 
              ",", "sppInit", ",", "sppInit", ",", "TPCversion", ",", 
              "Kversion"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "}"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"\[Alpha]version", "==", "\"\<constant\>\""}], ",", "1", 
            ",", "100"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"T", ",", "Temps"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Alpha]", ",", "\[Alpha]s"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Delta]", ",", "\[Delta]s"}], "}"}]}], "]"}], ",", "3"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<Computing time (s): \>\"", "<>", 
  RowBox[{"ToString", "[", 
   RowBox[{
    RowBox[{"SessionTime", "[", "]"}], "-", "time1"}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.814200680358645*^9, 3.814200792137969*^9}, {
   3.814200829023212*^9, 3.814200846452383*^9}, {3.814200912091023*^9, 
   3.814200916843218*^9}, {3.81420095376871*^9, 3.8142009777223063`*^9}, {
   3.814201059370276*^9, 3.814201061881678*^9}, {3.8142012601928053`*^9, 
   3.814201260379588*^9}, {3.814201463624428*^9, 3.814201588673044*^9}, {
   3.814201659197382*^9, 3.814201659786881*^9}, {3.814201716500862*^9, 
   3.814201799346335*^9}, {3.814201833135694*^9, 3.814201872300338*^9}, {
   3.814202403810824*^9, 3.814202414220598*^9}, {3.814202894367433*^9, 
   3.814202898512076*^9}, {3.81420293698411*^9, 3.814202949811364*^9}, {
   3.81420306174678*^9, 3.814203155680874*^9}, 3.814203209982554*^9, 
   3.8142033299360733`*^9, {3.814203493805093*^9, 3.814203500723701*^9}, {
   3.8142040260810204`*^9, 3.814204031397046*^9}, 3.814208079675956*^9, {
   3.8142181064858*^9, 3.814218133197962*^9}, {3.8142184216067553`*^9, 
   3.8142185785559673`*^9}, {3.8142629324193697`*^9, 3.81426296014161*^9}, 
   3.8142630716137037`*^9, {3.814263103323799*^9, 3.81426312434879*^9}, {
   3.814263349998374*^9, 3.814263376990157*^9}, 3.814263935981414*^9, 
   3.8142639775804462`*^9, {3.814264328490816*^9, 3.814264407775938*^9}, {
   3.81426457811031*^9, 3.814264609973999*^9}, {3.814264643872061*^9, 
   3.814264685464769*^9}, {3.8142652538825207`*^9, 3.814265257866536*^9}, {
   3.814265421358698*^9, 3.814265431865727*^9}, 3.814265731159803*^9, {
   3.8142661709493*^9, 3.8142663012477627`*^9}, {3.814266355360477*^9, 
   3.814266376600053*^9}, {3.814266455106221*^9, 3.814266467431327*^9}, {
   3.814266503282817*^9, 3.814266527084536*^9}, {3.81426669348508*^9, 
   3.8142668297608356`*^9}, {3.814266968567936*^9, 3.81426704472486*^9}, {
   3.814267111777087*^9, 3.814267116306531*^9}, {3.8142671485575533`*^9, 
   3.814267243236082*^9}, {3.814267290785758*^9, 3.814267362859353*^9}, {
   3.81426750636238*^9, 3.814267513765678*^9}, {3.814270879640726*^9, 
   3.8142709287214518`*^9}, {3.81427134945028*^9, 3.814271403458478*^9}, 
   3.814271439767001*^9, {3.814271843293199*^9, 3.814271886044508*^9}, {
   3.814271958806201*^9, 3.8142720310357847`*^9}, {3.814272203693049*^9, 
   3.814272225321494*^9}, {3.814272266640668*^9, 3.8142722721548977`*^9}, {
   3.814272309317531*^9, 3.814272314802167*^9}, {3.814272596701375*^9, 
   3.814272893532133*^9}, {3.814272987916914*^9, 3.814272988197509*^9}, 
   3.8142731910257387`*^9, 3.81427323932393*^9, {3.8142732964726458`*^9, 
   3.814273309288596*^9}, {3.814273372565683*^9, 3.81427338567907*^9}, {
   3.814273417759458*^9, 3.8142734654438887`*^9}, {3.814273596264781*^9, 
   3.814273666955523*^9}, 3.814273715733151*^9, {3.814275038210887*^9, 
   3.8142750413155813`*^9}, {3.814291092896757*^9, 3.814291117149371*^9}, {
   3.8143701101597548`*^9, 3.814370110885976*^9}, {3.814438984071624*^9, 
   3.814438987723831*^9}, {3.8144392653004217`*^9, 3.814439272271401*^9}, {
   3.8144731257405357`*^9, 3.814473134973641*^9}, {3.814473391650901*^9, 
   3.81447339351929*^9}, {3.8144759115947647`*^9, 3.8144759243544283`*^9}, 
   3.814475956030559*^9, {3.8151264829032927`*^9, 3.8151264851069508`*^9}, {
   3.8151266871884623`*^9, 3.8151266964849052`*^9}, {3.8151271186029882`*^9, 
   3.815127120132842*^9}, {3.819217366051948*^9, 3.819217368695373*^9}, {
   3.819445637191104*^9, 3.819445643856863*^9}, {3.8194572271564627`*^9, 
   3.819457256165557*^9}, {3.819463734964491*^9, 3.819463739717373*^9}, {
   3.819464414129608*^9, 3.81946443354992*^9}, {3.81946511803489*^9, 
   3.8194651388210363`*^9}, {3.819465579912367*^9, 3.819465597639209*^9}, {
   3.819465669635097*^9, 3.819465674503504*^9}, 3.819467177132161*^9, 
   3.81946734387969*^9, 3.8194673979713917`*^9, 3.8194674909324493`*^9, {
   3.819468210651705*^9, 3.819468211178464*^9}, 3.819468341631543*^9, {
   3.819468424173868*^9, 3.8194684284279222`*^9}, {3.819468475341744*^9, 
   3.819468493020396*^9}, {3.819469264345725*^9, 3.819469269248666*^9}, 
   3.81947014087558*^9, 3.819470737427639*^9, 3.819470783354309*^9, {
   3.819473467889645*^9, 3.819473491145399*^9}, {3.819473631267644*^9, 
   3.819473633258885*^9}, 3.819491772585235*^9, {3.8195353264199038`*^9, 
   3.8195353377509537`*^9}, 3.819535379232917*^9, {3.8195385359283752`*^9, 
   3.819538540227521*^9}, {3.819540252662446*^9, 3.819540255275798*^9}, {
   3.819549972415698*^9, 3.8195499749421377`*^9}, 3.819550347371457*^9, {
   3.8195503845133133`*^9, 3.819550392636643*^9}, {3.819563944660061*^9, 
   3.8195639621575537`*^9}, {3.8195641949916162`*^9, 
   3.8195642084810057`*^9}, {3.819569829428587*^9, 3.819569875335504*^9}, {
   3.832775075368355*^9, 3.832775101087029*^9}, {3.832776153064653*^9, 
   3.83277616364044*^9}, {3.832776394876418*^9, 3.832776436488985*^9}, {
   3.8327764960346737`*^9, 3.832776496524555*^9}, {3.832777682500238*^9, 
   3.832777683044129*^9}, {3.8328392122180347`*^9, 3.8328392170807*^9}, 
   3.832839316622739*^9, {3.8328417292779713`*^9, 3.832841750468389*^9}, {
   3.832944718804587*^9, 3.832944726772583*^9}, {3.83294481330928*^9, 
   3.832944814565805*^9}, {3.8329454980151587`*^9, 3.832945500292512*^9}, {
   3.8329487244147778`*^9, 3.832948743973755*^9}, {3.832954882019807*^9, 
   3.832954894186557*^9}, {3.832956440706993*^9, 3.832956443539627*^9}, {
   3.83295666289605*^9, 3.832956663079658*^9}, {3.832956717930822*^9, 
   3.832956718381377*^9}, {3.8339160336566067`*^9, 3.833916035200384*^9}, {
   3.833917957119293*^9, 3.833917969943626*^9}, 3.833918000245304*^9, {
   3.834826203603416*^9, 3.8348262101309557`*^9}, 3.834826348956308*^9, {
   3.8348265665910187`*^9, 3.834826572415338*^9}, {3.834826705380578*^9, 
   3.8348267088084707`*^9}, {3.8348343053975782`*^9, 3.834834309552363*^9}, {
   3.8405374046494713`*^9, 3.840537522856374*^9}, {3.84053918542375*^9, 
   3.840539234063776*^9}, {3.840541203139243*^9, 3.840541217393156*^9}, {
   3.84054165968734*^9, 3.8405417132909327`*^9}, {3.8405417483450527`*^9, 
   3.840541789571331*^9}, {3.840542831586439*^9, 3.840542865589698*^9}, {
   3.840542904557663*^9, 3.840542979643015*^9}, {3.840544055255947*^9, 
   3.840544056580226*^9}, {3.8405454065607967`*^9, 3.840545421444368*^9}, {
   3.840547000299107*^9, 3.840547000790451*^9}, {3.840547108216007*^9, 
   3.84054714132628*^9}, {3.840547181869011*^9, 3.840547328908484*^9}, {
   3.84054739291219*^9, 3.840547394102748*^9}, {3.840547735745798*^9, 
   3.840547756852151*^9}, 3.8405478362657022`*^9, {3.840548372321495*^9, 
   3.8405483815684547`*^9}, {3.8405499176879673`*^9, 3.840549933320012*^9}, {
   3.8405527386110086`*^9, 3.8405527492173157`*^9}, 3.840552788767508*^9, 
   3.840553225866346*^9, 3.84055340809086*^9, {3.840555761333703*^9, 
   3.840555789807095*^9}},ExpressionUUID->"3320bece-c3c2-48bd-b397-\
9ada01f2e03c"],

Cell[BoxData["\<\"Computing time (s): 12.110486\"\>"], "Output",
 CellChangeTimes->{
  3.819464449868622*^9, 3.819465284607683*^9, 3.819465608977412*^9, 
   3.819465684446227*^9, 3.819467188983235*^9, 3.819467353609581*^9, 
   3.819467407128274*^9, 3.819467503870158*^9, 3.819468221839419*^9, 
   3.819468350411106*^9, 3.8194684375233192`*^9, 3.819468505346538*^9, 
   3.8194692815711813`*^9, 3.8194701511037292`*^9, 3.819470797444396*^9, 
   3.819473507886384*^9, 3.819473647084491*^9, 3.819491783094089*^9, 
   3.819535348728438*^9, 3.8195353886873007`*^9, 3.819537511635922*^9, 
   3.819538555608116*^9, 3.819540280969417*^9, 3.8195503690731153`*^9, 
   3.819550431674128*^9, 3.819563970515272*^9, 3.819564210458293*^9, 
   3.819569931273614*^9, 3.819570430010364*^9, 3.832775110394693*^9, 
   3.832776184806551*^9, {3.8327764037726593`*^9, 3.832776439939307*^9}, 
   3.832776499693878*^9, 3.832777748690673*^9, 3.832839467319211*^9, 
   3.832841769629375*^9, 3.83293732483746*^9, 3.832944094341689*^9, 
   3.832944734087976*^9, 3.832944896873844*^9, 3.832945551166107*^9, 
   3.832948812196409*^9, 3.8329549182868*^9, 3.83295580193012*^9, 
   3.832956049137047*^9, 3.8329564658761253`*^9, 3.832956623670763*^9, 
   3.8329566768700037`*^9, 3.832956799540905*^9, 3.833914417963517*^9, 
   3.833914807030195*^9, 3.833915224008338*^9, 3.833915598221681*^9, 
   3.8339161296702747`*^9, 3.833916471703096*^9, 3.833918704552638*^9, {
   3.834826344175129*^9, 3.834826357067305*^9}, 3.83482659604487*^9, 
   3.834826725661386*^9, 3.8348344040520906`*^9, 3.834835509065146*^9, 
   3.840539249837536*^9, 3.84054254967171*^9, 3.8405428877667513`*^9, 
   3.840544095525112*^9, 3.840545444917623*^9, 3.8405473429085417`*^9, 
   3.840547410967533*^9, 3.84054846965018*^9, {3.840549928392424*^9, 
   3.840549951161436*^9}, {3.840552782666255*^9, 3.840552809529481*^9}, 
   3.840553251534614*^9, 3.840553427690351*^9, {3.840555769249645*^9, 
   3.840555787872282*^9}},
 CellLabel->"Out[37]=",ExpressionUUID->"a82adf50-cb03-455b-9174-b23bf97b1171"]
}, Open  ]],

Cell["export model output", "Text",
 CellChangeTimes->{{3.8143699161917877`*^9, 
  3.814369922177209*^9}},ExpressionUUID->"f76d43ba-b101-493f-9391-\
cb58e85d2dcb"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/PNAS_Wieczynski_etal_2021_Master/data/model_rawdata_small.csv\>\"", 
   ",", 
   RowBox[{"Prepend", "[", 
    RowBox[{"out", ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\"\<n\>\"", ",", "\"\<Temperature\>\"", ",", "\"\<alpha\>\"", ",", 
         "\"\<delta\>\""}], "}"}], ",", 
       RowBox[{"sppOrder", "[", 
        RowBox[{"[", "sppInit", "]"}], "]"}]}], "]"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.814369955714316*^9, 3.8143699781127777`*^9}, {
   3.8144391538070297`*^9, 3.814439154725841*^9}, {3.814439224507052*^9, 
   3.814439228107901*^9}, 3.81443934017962*^9, 3.815128639383202*^9, {
   3.81921738822228*^9, 3.819217388853992*^9}, {3.8194637496105547`*^9, 
   3.819463751365861*^9}, 3.819465342039556*^9, {3.819470143307232*^9, 
   3.819470147179544*^9}, {3.8195639320171633`*^9, 3.819563933922593*^9}, {
   3.819569822563005*^9, 3.8195698250232487`*^9}, {3.819570420619568*^9, 
   3.8195704209565163`*^9}, {3.832776206609138*^9, 3.8327762088954*^9}, {
   3.832776717349309*^9, 3.8327767205483427`*^9}, 3.8328417749704638`*^9, {
   3.832944640459674*^9, 3.832944674200253*^9}, {3.832948839244261*^9, 
   3.832948868962676*^9}, {3.832954920482473*^9, 3.832954924557704*^9}, {
   3.833914645046845*^9, 3.833914685806693*^9}, {3.833914728833906*^9, 
   3.833914738230711*^9}, 3.8339147933926287`*^9, {3.8339155723143578`*^9, 
   3.833915573156242*^9}, 3.83391614432673*^9, 3.833916421660015*^9, 
   3.8339180158145123`*^9, {3.834826324433799*^9, 3.8348263250728683`*^9}, 
   3.8348343962429733`*^9, 3.8348354613889236`*^9, {3.8405412527991457`*^9, 
   3.840541256869725*^9}, {3.840541348445878*^9, 3.840541376676985*^9}, {
   3.840542249811453*^9, 3.8405422502544603`*^9}, {3.8405557958341846`*^9, 
   3.840555802049591*^9}, 
   3.840559556415604*^9},ExpressionUUID->"56435b08-124f-4e72-8be1-\
af6601693291"],

Cell[TextData[{
 "\n",
 StyleBox["Large version (Figures 5/S4 B-D):",
  FontWeight->"Bold"]
}], "Text",
 CellChangeTimes->{{3.814273734067205*^9, 3.814273739588139*^9}, {
  3.840541173820731*^9, 3.840541174190709*^9}, {3.840541305787964*^9, 
  3.840541312691391*^9}, {3.840541942256443*^9, 
  3.840541942944371*^9}},ExpressionUUID->"4b4554cf-bb8f-4c34-bc82-\
0458283c8490"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"time1", "=", 
    RowBox[{"SessionTime", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Temps", "=", 
    RowBox[{"N", "[", 
     RowBox[{"Subdivide", "[", 
      RowBox[{"7", ",", "41", ",", "999"}], "]"}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{"choose", " ", "temperature", " ", "range"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"iTemps", "=", 
    RowBox[{"Partition", "[", 
     RowBox[{"Temps", ",", "10"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"iT", "=", 
      RowBox[{"iTemps", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]s", "=", 
      RowBox[{"{", "0.01", "}"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"choose", " ", "competition", " ", "parameter", " ", "set"}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Delta]s", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"0.001", ",", "1", ",", "0.001"}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"choose", " ", "mortality", " ", "parameter", " ", "set"}], " ",
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"sppInit", "=", 
      RowBox[{"Range", "[", 
       RowBox[{"1", ",", 
        RowBox[{"Length", "[", "sppOrder", "]"}]}], "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"choose", " ", "initial", " ", "species", " ", "set"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Alpha]version", "=", "\"\<constant\>\""}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "choose", " ", "\"\<constant\>\"", " ", "or", " ", "\"\<random\>\""}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"TPCversion", "=", "\"\<empirical\>\""}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "choose", " ", "\"\<empirical\>\"", " ", "or", " ", 
       "\"\<predicted\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Kversion", "=", "\"\<empirical\>\""}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{
      "choose", " ", "\"\<empirical\>\"", " ", "or", " ", 
       "\"\<constant\>\""}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"T", ",", "\[Alpha]", ",", "\[Delta]", ",", 
            RowBox[{
             RowBox[{"eqFunc", "[", 
              RowBox[{
              "T", ",", "\[Alpha]", ",", "\[Alpha]version", ",", "\[Delta]", 
               ",", "sppInit", ",", "sppInit", ",", "TPCversion", ",", 
               "Kversion"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{";;", ",", "2"}], "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"T", ",", "iT"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Alpha]", ",", "\[Alpha]s"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Delta]", ",", "\[Delta]s"}], "}"}]}], "]"}], ",", "2"}],
        "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"\"\<~/PNAS_Wieczynski_etal_2021_Master/data/temp/\>\"", "<>", 
        RowBox[{"ToString", "[", "i", "]"}], "<>", 
        "\"\<_model_rawdata_temp.csv\>\""}], ",", "out"}], "]"}], ";"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "iTemps", "]"}]}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<Computing time (s): \>\"", "<>", 
  RowBox[{"ToString", "[", 
   RowBox[{
    RowBox[{"SessionTime", "[", "]"}], "-", "time1"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.814200680358645*^9, 3.814200792137969*^9}, {
   3.814200829023212*^9, 3.814200846452383*^9}, {3.814200912091023*^9, 
   3.814200916843218*^9}, {3.81420095376871*^9, 3.8142009777223063`*^9}, {
   3.814201059370276*^9, 3.814201061881678*^9}, {3.8142012601928053`*^9, 
   3.814201260379588*^9}, {3.814201463624428*^9, 3.814201588673044*^9}, {
   3.814201659197382*^9, 3.814201659786881*^9}, {3.814201716500862*^9, 
   3.814201799346335*^9}, {3.814201833135694*^9, 3.814201872300338*^9}, {
   3.814202403810824*^9, 3.814202414220598*^9}, {3.814202894367433*^9, 
   3.814202898512076*^9}, {3.81420293698411*^9, 3.814202949811364*^9}, {
   3.81420306174678*^9, 3.814203155680874*^9}, 3.814203209982554*^9, 
   3.8142033299360733`*^9, {3.814203493805093*^9, 3.814203500723701*^9}, {
   3.8142040260810204`*^9, 3.814204031397046*^9}, 3.814208079675956*^9, {
   3.8142181064858*^9, 3.814218133197962*^9}, {3.8142184216067553`*^9, 
   3.8142185785559673`*^9}, {3.8142629324193697`*^9, 3.81426296014161*^9}, 
   3.8142630716137037`*^9, {3.814263103323799*^9, 3.81426312434879*^9}, {
   3.814263349998374*^9, 3.814263376990157*^9}, 3.814263935981414*^9, 
   3.8142639775804462`*^9, {3.814264328490816*^9, 3.814264407775938*^9}, {
   3.81426457811031*^9, 3.814264609973999*^9}, {3.814264643872061*^9, 
   3.814264685464769*^9}, {3.8142652538825207`*^9, 3.814265257866536*^9}, {
   3.814265421358698*^9, 3.814265431865727*^9}, 3.814265731159803*^9, {
   3.8142661709493*^9, 3.8142663012477627`*^9}, {3.814266355360477*^9, 
   3.814266376600053*^9}, {3.814266455106221*^9, 3.814266467431327*^9}, {
   3.814266503282817*^9, 3.814266527084536*^9}, {3.81426669348508*^9, 
   3.8142668297608356`*^9}, {3.814266968567936*^9, 3.81426704472486*^9}, {
   3.814267111777087*^9, 3.814267116306531*^9}, {3.8142671485575533`*^9, 
   3.814267243236082*^9}, {3.814267290785758*^9, 3.814267362859353*^9}, {
   3.81426750636238*^9, 3.814267513765678*^9}, {3.814270879640726*^9, 
   3.8142709287214518`*^9}, {3.81427134945028*^9, 3.814271403458478*^9}, 
   3.814271439767001*^9, {3.814271843293199*^9, 3.814271886044508*^9}, {
   3.814271958806201*^9, 3.8142720310357847`*^9}, {3.814272203693049*^9, 
   3.814272225321494*^9}, {3.814272266640668*^9, 3.8142722721548977`*^9}, {
   3.814272309317531*^9, 3.814272314802167*^9}, {3.814272596701375*^9, 
   3.814272893532133*^9}, {3.814272987916914*^9, 3.814272988197509*^9}, 
   3.8142731910257387`*^9, 3.81427323932393*^9, {3.8142732964726458`*^9, 
   3.814273309288596*^9}, {3.814273372565683*^9, 3.81427338567907*^9}, {
   3.814273417759458*^9, 3.8142734654438887`*^9}, {3.814273596264781*^9, 
   3.814273666955523*^9}, 3.814273715733151*^9, {3.8142737539411182`*^9, 
   3.814273776452023*^9}, {3.814273812386074*^9, 3.8142738412299433`*^9}, 
   3.81427479782937*^9, {3.814287593973055*^9, 3.814287610703906*^9}, {
   3.81428765551443*^9, 3.8142877037098427`*^9}, 3.814287775877368*^9, {
   3.814287837646924*^9, 3.814287932783533*^9}, {3.814287973258534*^9, 
   3.814287974449421*^9}, {3.814288039042642*^9, 3.814288106184864*^9}, {
   3.814288488885083*^9, 3.814288493576724*^9}, {3.814288560408907*^9, 
   3.81428856236797*^9}, {3.814288615741547*^9, 3.814288688114664*^9}, 
   3.832937781160885*^9, 3.832938938318108*^9, {3.832964826579487*^9, 
   3.832964827585107*^9}, {3.8405413994249496`*^9, 3.84054140324714*^9}, {
   3.840541445359983*^9, 3.840541497363759*^9}, {3.8405415310690928`*^9, 
   3.8405415338324966`*^9}, {3.840541584998702*^9, 3.840541630301673*^9}, {
   3.840541795755867*^9, 3.840541795956051*^9}, {3.840541860341506*^9, 
   3.840541860823854*^9}, {3.840541947307407*^9, 3.840541954011286*^9}, {
   3.840542140398036*^9, 3.840542140658963*^9}, {3.840542352862351*^9, 
   3.8405423588917*^9}, 3.8405428811282053`*^9, 3.840543005293816*^9, {
   3.840555825860888*^9, 3.8405558261150637`*^9}, 
   3.840559556426002*^9},ExpressionUUID->"77dc891c-7f71-451d-bfbd-\
09e1f0a18ba1"],

Cell["export model output", "Text",
 CellChangeTimes->{{3.8143699161917877`*^9, 
  3.814369922177209*^9}},ExpressionUUID->"35d3fbe3-1dba-4bc2-9941-\
5f0bd3e7b320"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"files", "=", 
   RowBox[{
   "FileNames", "[", 
    "\"\<~/PNAS_Wieczynski_etal_2021_Master/data/temp/*_model_rawdata_temp.\
csv\>\"", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{"Prepend", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Flatten", "[", "#", "]"}], "&"}], "/@", 
       RowBox[{"ToExpression", "[", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Import", "[", 
             RowBox[{"#", ",", "\"\<CSV\>\""}], "]"}], "&"}], "/@", "files"}],
           ",", "1"}], "]"}], "]"}]}], ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<Temperature\>\"", ",", "\"\<alpha\>\"", ",", "\"\<delta\>\""}], 
         "}"}], ",", "sppOrder"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/PNAS_Wieczynski_etal_2021_Master/data/model_rawdata_large.csv\>\"", 
   ",", "data"}], "]"}]}], "Input",
 CellChangeTimes->{{3.814292069304187*^9, 3.814292142590724*^9}, {
   3.814292176193194*^9, 3.814292211995223*^9}, 3.814292290867609*^9, {
   3.814292333978383*^9, 3.814292358465076*^9}, {3.814292443750506*^9, 
   3.8142924483754787`*^9}, {3.814293049545188*^9, 3.814293052553954*^9}, {
   3.8142931295589333`*^9, 3.8142931298956327`*^9}, {3.814293467976674*^9, 
   3.814293493822538*^9}, {3.814293569032703*^9, 3.8142935755179777`*^9}, {
   3.8142936558878393`*^9, 3.814293659366583*^9}, {3.8142936974280663`*^9, 
   3.8142937188474827`*^9}, {3.8142938362361393`*^9, 3.814293848650614*^9}, {
   3.814293940956094*^9, 3.814293951969267*^9}, {3.814294006665174*^9, 
   3.814294006973962*^9}, 3.814294062587061*^9, 3.832937782950453*^9, 
   3.8330118815916653`*^9, {3.840541985977495*^9, 3.840542008554802*^9}, 
   3.8405421571825933`*^9, {3.840555832098825*^9, 3.840555832578886*^9}, {
   3.8405595564267473`*^9, 
   3.840559556427215*^9}},ExpressionUUID->"31a6879e-31d1-41f7-82a7-\
4dab6176f9ae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network diagrams", "Section",
 CellChangeTimes->{{3.804610132608741*^9, 3.8046101459403133`*^9}, {
  3.814265708614468*^9, 
  3.8142657111945667`*^9}},ExpressionUUID->"d92dc791-6438-4ce9-a99c-\
fd8208c7ca4e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"transformFunc", "[", "data_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"temp1", ",", "temp2", ",", "temp3"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"temp1", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", ">", "0"}], ",", 
           RowBox[{"Log10", "[", "#", "]"}], ",", "0"}], "]"}], "&"}], "/@", 
        "data"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"temp2", "=", 
       RowBox[{"Select", "[", 
        RowBox[{"temp1", ",", 
         RowBox[{
          RowBox[{"#", "\[NotEqual]", "0"}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"temp3", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#", "\[NotEqual]", "0"}], ",", 
           RowBox[{"Rescale", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "5"}], ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", ".7"}], "}"}]}], "]"}], ",", "0"}], "]"}], 
         "&"}], "/@", "temp1"}]}], ";", "\[IndentingNewLine]", "temp3"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"commNetwork", "[", 
   RowBox[{"sppInit_", ",", "T_", ",", "\[Alpha]_", ",", "\[Delta]_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "colors", ",", "nodes", ",", "sols", ",", "stateVars", ",", 
      "equilibrium", ",", "feasMatrix", ",", "commMatrix", ",", "edgeMatrix", 
      ",", "edgeIDs", ",", "edges", ",", "edgeWeights", ",", "edgeStyles", 
      ",", "nodeWeights", ",", "nodeStyles", ",", "nodeShapes", ",", 
      "annotations"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"colors", "=", "sppColors"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nodes", "=", 
      RowBox[{"Sort", "[", "sppInit", "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"sols", "=", 
      RowBox[{"eqFunc", "[", 
       RowBox[{"T", ",", "\[Alpha]", ",", "\[Delta]", ",", "nodes"}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"stateVars", "=", 
      RowBox[{"sols", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"equilibrium", "=", 
      RowBox[{"sols", "[", 
       RowBox[{"[", 
        RowBox[{";;", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"feasMatrix", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Sign", "[", 
          RowBox[{"equilibrium", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "]"}], "*", 
         RowBox[{"Sign", "[", 
          RowBox[{"equilibrium", "[", 
           RowBox[{"[", "j", "]"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "nodes", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "[", "nodes", "]"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"commMatrix", "=", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"ToExpression", "[", 
          RowBox[{"eqns", "[", 
           RowBox[{
           "T", ",", "\[Alpha]", ",", "\[Delta]", ",", "\"\<all\>\"", ",", 
            "nodes"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"ToExpression", "[", "stateVars", "]"}], "}"}]}], "]"}], "/.",
        "sols"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"edgeMatrix", "=", 
      RowBox[{"feasMatrix", "*", "commMatrix"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"edgeIDs", "=", 
      RowBox[{"Permutations", "[", 
       RowBox[{"nodes", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"edges", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"#", "[", 
          RowBox[{"[", "1", "]"}], "]"}], "\[DirectedEdge]", 
         RowBox[{"#", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "&"}], "/@", "edgeIDs"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"edgeWeights", "=", 
      RowBox[{
       RowBox[{"0.6", "*", 
        RowBox[{"Abs", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"edgeMatrix", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], "&"}], "/@", 
          RowBox[{"Permutations", "[", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"Length", "[", "nodes", "]"}]}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}]}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"0.", "\[Rule]", 
         RowBox[{"-", "1"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"edgeStyles", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"colors", "[", 
           RowBox[{"[", 
            RowBox[{"edges", "[", 
             RowBox[{"[", 
              RowBox[{"#", ",", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"Thickness", "[", 
           RowBox[{"edgeWeights", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "]"}], ",", 
          RowBox[{"CapForm", "[", "\"\<Round\>\"", "]"}]}], "}"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "edges", "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nodeWeights", "=", 
      RowBox[{"transformFunc", "[", "equilibrium", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nodeStyles", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"colors", "[", 
           RowBox[{"[", 
            RowBox[{"nodes", "[", 
             RowBox[{"[", "#", "]"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"EdgeForm", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.01", "]"}], ",", "White", ",", 
             RowBox[{"Opacity", "[", "1", "]"}]}], "}"}], "]"}]}], "}"}], 
        "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"1", ",", 
         RowBox[{"Length", "[", "nodes", "]"}]}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nodeShapes", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"nodeWeights", "[", 
            RowBox[{"[", "#", "]"}], "]"}], "\[Equal]", "0"}], ",", 
          "\"\<\>\"", ",", "Automatic"}], "]"}], "&"}], "/@", 
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "nodes", "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", 
      RowBox[{"edges", ",", 
       RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
       RowBox[{"EdgeShapeFunction", "\[Rule]", "\"\<Line\>\""}], ",", 
       RowBox[{"EdgeStyle", "\[Rule]", 
        RowBox[{"Thread", "[", 
         RowBox[{"edges", "\[Rule]", "edgeStyles"}], "]"}]}], ",", 
       RowBox[{"VertexSize", "->", 
        RowBox[{"Thread", "[", 
         RowBox[{"nodes", "\[Rule]", "nodeWeights"}], "]"}]}], ",", 
       RowBox[{"VertexShape", "->", 
        RowBox[{"Thread", "[", 
         RowBox[{"nodes", "\[Rule]", "nodeShapes"}], "]"}]}], ",", 
       RowBox[{"VertexStyle", "->", 
        RowBox[{"Thread", "[", 
         RowBox[{"nodes", "\[Rule]", "nodeStyles"}], "]"}]}], ",", 
       RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"commNetwork", "[", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"1", ",", 
     RowBox[{"Length", "[", "sppOrder", "]"}]}], "]"}], ",", "34", ",", 
   "0.01", ",", "1.0"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8086674403468523`*^9, 3.8086674739548903`*^9}, 
   3.808667719079475*^9, {3.808667752577963*^9, 3.808667775973476*^9}, {
   3.80866806822401*^9, 3.8086680708844843`*^9}, {3.808668238544945*^9, 
   3.8086682457181664`*^9}, {3.808671146276976*^9, 3.8086711474349422`*^9}, {
   3.808676607659526*^9, 3.808676735553773*^9}, {3.808676828601605*^9, 
   3.808676867199929*^9}, {3.808676931931264*^9, 3.80867694428928*^9}, 
   3.8086770014875917`*^9, {3.8086771316972017`*^9, 3.8086772419240637`*^9}, {
   3.808677366973987*^9, 3.808677371377681*^9}, 3.8086774547239532`*^9, {
   3.8086774978851757`*^9, 3.808677619939577*^9}, {3.808677730067272*^9, 
   3.808677904158329*^9}, {3.808678008791027*^9, 3.8086780264988413`*^9}, {
   3.808679639771707*^9, 3.808679667132629*^9}, 3.808679703320243*^9, {
   3.808679751429922*^9, 3.808679754496283*^9}, {3.808679786556814*^9, 
   3.8086797939337378`*^9}, 3.808680172518537*^9, {3.808680786219716*^9, 
   3.808680814883564*^9}, 3.808682255346467*^9, {3.808733621728381*^9, 
   3.808733629631365*^9}, {3.808733840478598*^9, 3.808733888328895*^9}, {
   3.808733967732935*^9, 3.808733990682221*^9}, {3.8087341970534153`*^9, 
   3.808734251757216*^9}, 3.8087342968041573`*^9, {3.808734327899993*^9, 
   3.808734342411697*^9}, {3.808735817513215*^9, 3.808735839461886*^9}, {
   3.808736209429061*^9, 3.808736319340583*^9}, {3.808736355665264*^9, 
   3.8087363845418043`*^9}, {3.8087364284186497`*^9, 3.808736444236506*^9}, {
   3.808736534536594*^9, 3.8087365453904743`*^9}, 3.808736577543788*^9, {
   3.808736955831761*^9, 3.808736984053483*^9}, {3.808737023008051*^9, 
   3.808737024284751*^9}, {3.808737146687146*^9, 3.808737175164246*^9}, 
   3.808737451606192*^9, 3.808737504225478*^9, {3.8087375938558197`*^9, 
   3.8087376104208937`*^9}, 3.808737648886189*^9, {3.808738067039016*^9, 
   3.808738067405993*^9}, {3.808739844950982*^9, 3.808739909211958*^9}, {
   3.8087399841041527`*^9, 3.8087400468162613`*^9}, 3.808740079499584*^9, {
   3.808740126921391*^9, 3.808740132512685*^9}, {3.808740189046413*^9, 
   3.808740226619176*^9}, {3.808740260705433*^9, 3.808740412033126*^9}, {
   3.8087405000714483`*^9, 3.808740505808103*^9}, {3.80874056664319*^9, 
   3.808740614806814*^9}, {3.808740708367709*^9, 3.80874082805973*^9}, {
   3.808741344671775*^9, 3.808741348514069*^9}, {3.808741390525934*^9, 
   3.80874155485914*^9}, 3.8087417635462017`*^9, {3.808741882168675*^9, 
   3.808741949318115*^9}, {3.808742027775653*^9, 3.808742048345549*^9}, {
   3.8087420849399443`*^9, 3.808742086172522*^9}, {3.808742116747367*^9, 
   3.808742131899065*^9}, {3.808742189901002*^9, 3.808742195580303*^9}, {
   3.808742255469797*^9, 3.8087422719492702`*^9}, {3.808742329615706*^9, 
   3.8087423685669937`*^9}, 3.8087427819549932`*^9, 3.808742960433485*^9, 
   3.8087431867729053`*^9, 3.8087445542412357`*^9, {3.808744593273543*^9, 
   3.80874462461325*^9}, {3.808744675221266*^9, 3.808744684254407*^9}, {
   3.80874476898499*^9, 3.808744780083755*^9}, {3.808744827467258*^9, 
   3.8087448412559023`*^9}, 3.808747754609209*^9, 3.808747832315474*^9, 
   3.808747872846005*^9, 3.808752943811281*^9, {3.808756722871356*^9, 
   3.808756752410406*^9}, {3.808756818186617*^9, 3.808756834009956*^9}, {
   3.808757094693296*^9, 3.808757095223166*^9}, {3.808757755105341*^9, 
   3.808757758140543*^9}, {3.808757929825584*^9, 3.808757957942842*^9}, {
   3.808757991128805*^9, 3.808757993560877*^9}, {3.808758458559702*^9, 
   3.808758467667633*^9}, {3.808758917038742*^9, 3.808758940940065*^9}, {
   3.808758985230919*^9, 3.808759005580694*^9}, 3.808759058782515*^9, {
   3.808759154715376*^9, 3.808759240343213*^9}, {3.808759673161188*^9, 
   3.808759673474554*^9}, {3.808761120978739*^9, 3.808761126828432*^9}, {
   3.808761263529745*^9, 3.808761263655678*^9}, {3.808761399669746*^9, 
   3.8087614249343977`*^9}, {3.808766372231668*^9, 3.8087663785865097`*^9}, {
   3.8087751421095467`*^9, 3.8087751424559307`*^9}, {3.8099504790135736`*^9, 
   3.8099504791819887`*^9}, {3.809950525806237*^9, 3.809950560085373*^9}, {
   3.811519006763933*^9, 3.811519050560503*^9}, {3.811519082956514*^9, 
   3.8115190969160147`*^9}, {3.811519143668437*^9, 3.8115191507521467`*^9}, {
   3.811519259466074*^9, 3.811519265922415*^9}, {3.8115193179457808`*^9, 
   3.811519334012475*^9}, {3.811519374643873*^9, 3.81151939080597*^9}, {
   3.8115197242597113`*^9, 3.811519732983046*^9}, {3.8142005394872007`*^9, 
   3.8142005452616796`*^9}, {3.8143701531713257`*^9, 3.814370153417841*^9}, {
   3.8143702314328423`*^9, 3.8143702882900667`*^9}, {3.814370327582651*^9, 
   3.814370341529858*^9}, {3.8143706812116537`*^9, 3.814370697446498*^9}, {
   3.81437078198691*^9, 3.814370782885048*^9}, {3.814370834081777*^9, 
   3.8143708346377573`*^9}, {3.8143709648571444`*^9, 3.814370968120636*^9}, 
   3.814371060524522*^9, {3.814372909925817*^9, 3.8143729228265657`*^9}, {
   3.814376817033914*^9, 3.8143768457812157`*^9}, {3.814376887264247*^9, 
   3.814376912621847*^9}, {3.814376980617752*^9, 3.8143770354337587`*^9}, {
   3.814377065550187*^9, 3.814377080771907*^9}, {3.8143771820212*^9, 
   3.814377182450779*^9}, 3.814377235000469*^9, {3.814377411266768*^9, 
   3.814377432583131*^9}, {3.814435499886496*^9, 3.814435528036436*^9}, 
   3.8144381641626797`*^9, {3.814438229123599*^9, 3.81443823881353*^9}, {
   3.8144383487391148`*^9, 3.8144383725983343`*^9}, {3.8144384195907087`*^9, 
   3.8144384269484873`*^9}, {3.8144850125891314`*^9, 
   3.8144850803815947`*^9}, {3.81448512304088*^9, 3.814485123167807*^9}, {
   3.8144853927016068`*^9, 3.8144854196850367`*^9}, {3.814485516336825*^9, 
   3.814485533013118*^9}, {3.814485693908135*^9, 3.814485702790841*^9}, {
   3.814485738645728*^9, 3.814485742830578*^9}, {3.814485804625695*^9, 
   3.814485806866537*^9}, {3.814485884426445*^9, 3.814485915032123*^9}, {
   3.81448595518994*^9, 3.814485962403474*^9}, 3.8144859967431*^9, {
   3.814486053777567*^9, 3.814486171122777*^9}, {3.814486209231555*^9, 
   3.814486210822052*^9}, 3.814486250638818*^9, {3.81448628219991*^9, 
   3.8144862881231203`*^9}, {3.814522210487949*^9, 3.8145222136530647`*^9}, {
   3.814522319802924*^9, 3.814522356105217*^9}, 3.814522396328717*^9, {
   3.814522505987808*^9, 3.8145225191996183`*^9}, 3.81452261936935*^9, {
   3.814522670953753*^9, 3.814522675191557*^9}, {3.814522756230545*^9, 
   3.814522795811069*^9}, {3.81452284134214*^9, 3.8145228430822897`*^9}, {
   3.8145229338420067`*^9, 3.814522946762534*^9}, {3.814523860357196*^9, 
   3.814523860888015*^9}, {3.814523910137577*^9, 3.8145239364165792`*^9}, {
   3.814524531660429*^9, 3.814524557201344*^9}, {3.814524751386331*^9, 
   3.8145247655931377`*^9}, {3.814524808326642*^9, 3.814524827339089*^9}, {
   3.814524862850851*^9, 3.814524896351638*^9}, {3.814528852365384*^9, 
   3.814528865274578*^9}, {3.8329468368553867`*^9, 3.832946845047389*^9}, {
   3.832947994590967*^9, 3.8329480024969873`*^9}, {3.840542425907205*^9, 
   3.840542434552672*^9}},ExpressionUUID->"cd77b859-e2fc-47fc-aaa6-\
7eb7884b4567"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14}, {CompressedData["
1:eJwVkElVBQEQA6f3Ne0BS0j4BnCHPoZDXm5Z6uvz8/3h53l+X/07MQkpGTkF
JRU1DS2BjomFlY2dg5OLm4eXwSckLComLiEpJS0jK5BTUlZRU9fQ1NLW0VXo
GRmbmJpbWFpZ29ga7JycXVzdPDy9vH18HX5BwSGhYeGRUdExsYG4pOSU1LT0
jKzsnNxEXlFxSWlZeUVldU1toa6puaW1rb2js6unt9E3NDwyOjY+MTk1PTuY
W1peWV1b39jc2t5Z7IHAECgMjkCi0Bgs7l5096K499q9U++tvjfq8AfwNQ0L

       "], Null}, {
      EdgeShapeFunction -> {"Line"}, EdgeStyle -> {DirectedEdge[4, 14] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 11] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 5] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 10] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 2] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 9] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 7] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 10] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 6] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 7] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 4] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 9] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 12] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 7] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 11] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 12] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 5] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 1] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 10] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 10] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 13] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 14] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 12] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 5] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 7] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 11] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 10] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 7] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 1] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 6] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 5] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 4] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 3] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 9] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 1] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 2] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 14] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 12] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 12] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 4] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 10] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 3] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 11] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 14] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 1] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 9] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[0.0005763993932798665], 
           CapForm["Round"]}, DirectedEdge[4, 10] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 13] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 8] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 8] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 12] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 14] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 2] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 5] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 3] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 8] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 10] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 3] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 3] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 3] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 5] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 5] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 9] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 8] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 13] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 13] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 1] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 4] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 13] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 7] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 8] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 6] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 12] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 8] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 11] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 1] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 6] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 7] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 6] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 12] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 10] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 5] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 6] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 2] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 2] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 6] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 6] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 4] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 8] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 2] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 3] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 3] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 2] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 2] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 13] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 7] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 1] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 3] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 4] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 1] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 9] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 14] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 5] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 10] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 8] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 8] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 9] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 2] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 3] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 6] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 9] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 11] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 13] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 14] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 7] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 9] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 8] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 7] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 14] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 4] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 4] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 13] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 2] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 3] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 13] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 10] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 12] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 7] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 3] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 8] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 4] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 10] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 11] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 11] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 11] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 5] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 6] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 1] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 13] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 4] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 14] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 12] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 7] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 8] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 9] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 6] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 12] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 5] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 14] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 3] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 5] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[5, 13] -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 12] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 13] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[4, 7] -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 11] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[14, 4] -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[12, 1] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 14] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[0.012654813485872236`], 
           CapForm["Round"]}, DirectedEdge[12, 5] -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 1] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 13] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[13, 1] -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[10, 2] -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 10] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[9, 2] -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 11] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 14] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 11] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 9] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[1, 2] -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 12] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 14] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[11, 4] -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[2, 6] -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 9] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 6] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[6, 8] -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 1] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[7, 4] -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[8, 9] -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           Thickness[-1], 
           CapForm["Round"]}, DirectedEdge[3, 11] -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           Thickness[-1], 
           CapForm["Round"]}}, ImageSize -> 300, PerformanceGoal -> "Quality",
        VertexShape -> {
        12 -> "", 8 -> "", 2 -> "", 10 -> "", 4 -> "", 14 -> Automatic, 7 -> 
         "", 6 -> "", 5 -> "", 9 -> Automatic, 11 -> "", 3 -> "", 13 -> "", 1 -> 
         ""}, 
       VertexSize -> {
        13 -> 0, 6 -> 0, 10 -> 0, 12 -> 0, 3 -> 0, 1 -> 0, 11 -> 0, 14 -> 
         0.5635502774341633, 4 -> 0, 9 -> 0.28484798392754485`, 7 -> 0, 5 -> 
         0, 2 -> 0, 8 -> 0}, VertexStyle -> {11 -> {
           RGBColor[1., 0.4980392156862745, 0.], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 14 -> {
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 12 -> {
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 9 -> {
           RGBColor[1., 0.8352941176470589, 0.], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 13 -> {
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 6 -> {
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 3 -> {
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 7 -> {
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 4 -> {
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 1 -> {
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 2 -> {
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 5 -> {
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 10 -> {
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}, 8 -> {
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}}]], Typeset`boxes, Typeset`boxes$s2d = 
    GraphicsGroupBox[{{
       Directive[
        Opacity[0.7], 
        Hue[0.6, 0.7, 0.5]], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$1", Automatic, Center], {-0.23322662291530252`, 
           1.021832600202307}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
           3.3790513231617976`*^-15, 1.0436652004046105`}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
           0.21960273662313484`, 0.9621424542799979}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
           0.3820865717150684, 0.7934109415093181}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
           0.45526958900239256`, 0.5708900075530028}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
           0.4246569943805424, 0.33865265242126225`}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
           0.29631198765319877`, 0.14269633250219677`}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$1", Automatic, Center], {
           0.0956548714509394, 0.021832600202307584`}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$1", Automatic, Center], {-0.13757175146435782`, 
           3.9182484600659474`*^-16}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$1", Automatic, Center], {-0.35717448808748914`, 
           0.08152274612461372}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$1", Automatic, Center], {-0.5196583231794302, 
           0.2502542588952935}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$1", Automatic, Center], {-0.5928413404667526, 
           0.4727751928516065}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$1", Automatic, Center], {-0.5622287458449028, 
           0.7050125479833391}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$2", Automatic, Center], {-0.20065711620226145`, 
           0.8791362677001164}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
           0.23322662291529547`, 1.0218326002023033`}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
           0.4528293595384261, 0.9403098540776927}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
           0.6153131946303672, 0.771578341307012}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
           0.6884962119176877, 0.5490574073506984}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
           0.6578836172958324, 0.31682005221896403`}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
           0.529538610568497, 0.12086373229988458`}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
           0.3288814943662324, -1.2144178612489135`*^-15}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$2", Automatic, Center], {
           0.09565487145093808, -0.021832600202307047`}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$2", Automatic, Center], {-0.12394786517219429`, 
           0.0596901459223103}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$2", Automatic, Center], {-0.286431700264135, 
           0.22842165869298753`}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$2", Automatic, Center], {-0.3596147175514554, 
           0.4509425926493038}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$2", Automatic, Center], {-0.3290021229296055, 
           0.6831799477810372}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[
          0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$3", Automatic, Center], {-2.764678355314178*^-15, 
           0.7582725354002274}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
           0.20065711620226015`, 0.8791362677001138}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
           0.653486475740689, 0.8194461217778108}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
           0.8159703108326305, 0.650714609007125}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
           0.8891533281199507, 0.42819367505081496`}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
           0.8585407334980971, 0.19595631991907392`}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
           0.7301957267707586, 0.}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
           0.5295386105684962, -0.12086373229988588`}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
           0.29631198765320016`, -0.14269633250218897`}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$3", Automatic, Center], {
           0.07670925103006786, -0.06117358637757878}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$3", Automatic, Center], {-0.08577458406187251, 
           0.10755792639310241`}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$3", Automatic, Center], {-0.15895760134920045`, 
           0.33007886034941303`}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$3", Automatic, Center], {-0.12834500672734042`, 
           0.5623162154811555}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[
          0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.1283450067273356, 0.5623162154811547}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.3290021229295989, 0.683179947781042}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.5622287458448942, 0.7050125479833487}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.9443153175599703, 0.45475828908804583`}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           1.017498334847292, 0.23223735513173455`}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.9868857402254362, 0.}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.8585407334980969, -0.19595631991907425`}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.6578836172958354, -0.3168200522189588}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.4246569943805399, -0.33865265242126236`}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.20505425775741118`, -0.2571299062966499}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           0.04257042266547001, -0.08839839352596991}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$4", Automatic, Center], {-0.030612594621852614`, 
           0.13412254043034347`}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$4", Automatic, Center], {
           2.5543847138573644`*^-15, 0.3663598955620813}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.15895760134919404`, 0.33007886034941464`}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.35961471755145447`, 0.45094259264930303`}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.5928413404667514, 0.4727751928516035}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.8124440770898859, 0.39125244672699494`}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           1.0481109294691466`, -3.5037116554773026`*^-15}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           1.0174983348472904`, -0.2322373551317371}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.8891533281199525, -0.4281936750508117}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.6884962119176892, -0.5490574073506981}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.4552695890023934, -0.5708900075530028}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.23566685237925714`, -0.4893672614283919}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.07318301728732117, -0.32063574865771005`}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           2.129471768763428*^-15, -0.098114814701396}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$5", Automatic, Center], {
           0.030612594621857784`, 0.13412254043034175`}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[
          0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.08577458406187029, 0.10755792639310108`}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.2864317002641365, 0.2284216586929835}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.5196583231794294, 0.25025425889529074`}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.739261059802562, 0.16873151277067988`}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.9017448948945017, -3.795687626767078*^-15}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.9443153175599691, -0.45475828908805416`}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.8159703108326303, -0.6507146090071272}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.6153131946303693, -0.7715783413070114}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.38208657171507215`, -0.7934109415093157}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$6", Automatic, Center], {
           0.16248383509193798`, -0.7118881953847053}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$6", Automatic, 
            Center], {-4.502311739671247*^-15, -0.543156682614025}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$6", Automatic, 
            Center], {-0.07318301728732657, -0.3206357486577078}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$6", Automatic, 
            Center], {-0.04257042266547126, -0.08839839352597031}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$7", Automatic, 
            Center], {-0.07670925103006945, -0.06117358637757902}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.12394786517219616`, 0.05969014592230676}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.35717448808749075`, 0.08152274612460973}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.576777224710623, 0.}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.7392610598025627, -0.16873151277068085`}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.8124440770898872, -0.39125244672699366`}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.6534864757406944, -0.8194461217778096}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.45282935953842873`, -0.9403098540776933}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           0.21960273662312882`, -0.9621424542799996}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$7", Automatic, Center], {
           2.0813505075874848`*^-15, -0.8806197081553868}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$7", Automatic, 
            Center], {-0.16248383509194192`, -0.7118881953847044}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$7", Automatic, 
            Center], {-0.2356668523792618, -0.48936726142838927`}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$7", Automatic, 
            Center], {-0.2050542577574042, -0.257129906296653}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[
          0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$8", Automatic, 
            Center], {-0.2963119876531984, -0.14269633250219937`}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$8", Automatic, 
            Center], {-0.09565487145093898, -0.021832600202305888`}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$8", Automatic, Center], {
           0.13757175146435768`, 0.}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$8", Automatic, Center], {
           0.3571744880874888, -0.08152274612461581}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$8", Automatic, Center], {
           0.5196583231794298, -0.2502542588952942}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$8", Automatic, Center], {
           0.5928413404667515, -0.47277519285160996`}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$8", Automatic, Center], {
           0.5622287458448931, -0.7050125479833474}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$8", Automatic, Center], {
           0.23322662291529095`, -1.021832600202306}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$8", Automatic, 
            Center], {-3.0718648392379756`*^-16, -1.0436652004046116`}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$8", Automatic, 
            Center], {-0.21960273662313093`, -0.9621424542799972}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$8", Automatic, 
            Center], {-0.3820865717150698, -0.7934109415093168}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$8", Automatic, 
            Center], {-0.45526958900239567`, -0.5708900075530001}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$8", Automatic, 
            Center], {-0.42465699438054055`, -0.33865265242126247`}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[
          0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$9", Automatic, 
            Center], {-0.5295386105684973, -0.12086373229988844`}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$9", Automatic, Center], {-0.3288814943662324, 
           1.2144178612489135`*^-15}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$9", Automatic, Center], {-0.0956548714509383, 
           0.02183260020230668}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {
           0.12394786517219405`, -0.05969014592231055}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {
           0.2864317002641348, -0.228421658692988}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {
           0.3596147175514572, -0.4509425926493032}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {
           0.3290021229296054, -0.6831799477810381}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$9", Automatic, Center], {
           0.200657116202258, -0.8791362677001135}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$9", Automatic, 
            Center], {-0.23322662291529547`, -1.0218326002023033`}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$9", Automatic, 
            Center], {-0.45282935953842535`, -0.9403098540776935}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$9", Automatic, 
            Center], {-0.6153131946303659, -0.7715783413070123}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$9", Automatic, 
            Center], {-0.6884962119176864, -0.5490574073507001}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$9", Automatic, 
            Center], {-0.6578836172958352, -0.31682005221895826`}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[1., 0.8352941176470589, 0.], 
          Thickness[0.012654813485872236`], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, Center], {-0.7301957267707592, 
           1.7097811462105971`*^-15}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, Center], {-0.5295386105684982, 
           0.12086373229988297`}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, Center], {-0.29631198765320144`, 
           0.1426963325021868}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, Center], {-0.07670925103006757, 
           0.06117358637757759}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$10", Automatic, Center], {
           0.08577458406187251, -0.10755792639310241`}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$10", Automatic, Center], {
           0.15895760134919742`, -0.3300788603494148}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$10", Automatic, Center], {
           0.12834500672734378`, -0.5623162154811558}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, 
            Center], {-8.294035065942534*^-15, -0.7582725354002287}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, 
            Center], {-0.20065711620226015`, -0.8791362677001138}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, 
            Center], {-0.6534864757406972, -0.8194461217778012}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, 
            Center], {-0.8159703108326319, -0.6507146090071223}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, 
            Center], {-0.8891533281199507, -0.42819367505081324`}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$10", Automatic, 
            Center], {-0.8585407334980958, -0.19595631991907456`}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[
          0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, Center], {-0.8585407334980965, 
           0.19595631991907592`}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, Center], {-0.6578836172958354, 
           0.31682005221895926`}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, Center], {-0.4246569943805419, 
           0.3386526524212611}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, Center], {-0.20505425775741118`, 
           0.2571299062966499}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, Center], {-0.04257042266546549, 
           0.08839839352597166}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$11", Automatic, Center], {
           0.030612594621855203`, -0.1341225404303437}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, 
            Center], {-2.0813505075874848`*^-15, -0.3663598955620811}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, 
            Center], {-0.12834500672733723`, -0.5623162154811551}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, 
            Center], {-0.32900212292959985`, -0.6831799477810419}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, 
            Center], {-0.5622287458448942, -0.7050125479833487}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, 
            Center], {-0.9443153175599661, -0.4547582890880503}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, 
            Center], {-1.0174983348472915`, -0.23223735513173435`}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$11", Automatic, Center], {-0.9868857402254354, 
           2.6777044960274938`*^-15}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[1., 0.4980392156862745, 0.], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, Center], {-0.889153328119953, 
           0.4281936750508108}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, Center], {-0.6884962119176867, 
           0.5490574073507006}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, Center], {-0.4552695890023947, 
           0.5708900075530032}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, Center], {-0.23566685237926271`, 
           0.48936726142839104`}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, Center], {-0.07318301728732052, 
           0.32063574865770955`}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, Center], {-1.0038938338456148`*^-15, 
           0.09811481470139562}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, 
            Center], {-0.030612594621850772`, -0.13412254043034585`}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, 
            Center], {-0.1589576013491947, -0.3300788603494162}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, 
            Center], {-0.35961471755145136`, -0.4509425926493045}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, 
            Center], {-0.5928413404667509, -0.47277519285160513`}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, 
            Center], {-0.8124440770898872, -0.39125244672699366`}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, 
            Center], {-1.0481109294691469`, -4.087663598056795*^-15}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$12", Automatic, Center], {-1.0174983348472895`, 
           0.23223735513174015`}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[0.788235294117647, 0.09019607843137255, 0.592156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, Center], {-0.8159703108326268, 
           0.6507146090071272}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, Center], {-0.615313194630369, 
           0.7715783413070111}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, Center], {-0.38208657171507243`, 
           0.7934109415093169}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, Center], {-0.16248383509193942`, 
           0.7118881953847058}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$13", Automatic, Center], {
           4.502311739671238*^-15, 0.543156682614024}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$13", Automatic, Center], {
           0.07318301728732161, 0.3206357486577074}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$13", Automatic, Center], {
           0.042570422665469884`, 0.08839839352597002}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, 
            Center], {-0.08577458406186858, -0.10755792639310469`}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, 
            Center], {-0.28643170026413534`, -0.22842165869298636`}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, 
            Center], {-0.5196583231794296, -0.2502542588952907}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, 
            Center], {-0.7392610598025605, -0.1687315127706837}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, Center], {-0.9017448948945006, 
           1.1679038851591008`*^-15}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$13", Automatic, Center], {-0.9443153175599687, 
           0.4547582890880547}, 
           DynamicLocation["VertexID$14", Automatic, Center]}]}, {{
          RGBColor[0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$14", Automatic, Center], {-0.6534864757406944, 
           0.8194461217778096}, 
           DynamicLocation["VertexID$1", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$14", Automatic, Center], {-0.45282935953842945`, 
           0.9403098540776956}, 
           DynamicLocation["VertexID$2", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$14", Automatic, Center], {-0.21960273662313232`, 
           0.9621424542799982}, 
           DynamicLocation["VertexID$3", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$14", Automatic, Center], {
           3.7842736501590585`*^-16, 0.8806197081553864}, 
           DynamicLocation["VertexID$4", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$14", Automatic, Center], {
           0.16248383509193792`, 0.7118881953847047}, 
           DynamicLocation["VertexID$5", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$14", Automatic, Center], {
           0.2356668523792619, 0.4893672614283907}, 
           DynamicLocation["VertexID$6", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$14", Automatic, Center], {
           0.20505425775740665`, 0.25712990629665217`}, 
           DynamicLocation["VertexID$7", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation["VertexID$14", Automatic, Center], {
           0.0767092510300695, 0.0611735863775789}, 
           DynamicLocation["VertexID$8", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$14", Automatic, 
            Center], {-0.12394786517219522`, -0.059690145922302644`}, 
           DynamicLocation["VertexID$9", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[0.0005763993932798665], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$14", Automatic, 
            Center], {-0.3571744880874902, -0.08152274612460811}, 
           DynamicLocation["VertexID$10", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$14", Automatic, 
            Center], {-0.5767772247106235, -1.4876136089041632`*^-15}, 
           DynamicLocation["VertexID$11", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$14", Automatic, Center], {-0.7392610598025614, 
           0.16873151277067913`}, 
           DynamicLocation["VertexID$12", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False], 
       StyleBox[{
         BezierCurveBox[{
           DynamicLocation[
           "VertexID$14", Automatic, Center], {-0.8124440770898824, 
           0.39125244672699966`}, 
           DynamicLocation["VertexID$13", Automatic, Center]}]}, {{
          RGBColor[
          0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
          Thickness[-1], 
          CapForm["Round"]}}, StripOnInput -> False]}, {
       Directive[
        Hue[0.6, 0.2, 0.8], 
        EdgeForm[
         Directive[
          GrayLevel[0], 
          Opacity[0.7]]]], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {-0.43388373911755873`, 0.9009688679024195}, Automatic, {0., 
           0.}], "InsetString"], {{
           RGBColor[
           0.6509803921568628, 0.807843137254902, 0.8901960784313725], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$1"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox["", {-7.044813998280222*^-16, 1.}, Automatic, {0., 0.}], 
          "InsetString"], {{
           RGBColor[
           0.12156862745098039`, 0.47058823529411764`, 0.7058823529411765], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$2"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {0.43388373911755745`, 0.9009688679024186}, Automatic, {0., 
           0.}], "InsetString"], {{
           RGBColor[
           0.01568627450980392, 0.24705882352941178`, 0.4392156862745098], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$3"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {0.7818314824680294, 0.6234898018587327}, Automatic, {0., 0.}], 
          "InsetString"], {{
           RGBColor[0.2, 0.6274509803921569, 0.17254901960784313`], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$4"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {0.9749279121818234, 0.22252093395631328`}, Automatic, {0., 
           0.}], "InsetString"], {{
           RGBColor[
           0.27450980392156865`, 0.8588235294117647, 0.7411764705882353], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$5"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {0.9749279121818237, -0.2225209339563155}, Automatic, {0., 0.}],
           "InsetString"], {{
           RGBColor[0.984313725490196, 0.6039215686274509, 0.6], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$6"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {0.7818314824680304, -0.6234898018587344}, Automatic, {0., 0.}],
           "InsetString"], {{
           RGBColor[
           0.8901960784313725, 0.10196078431372549`, 0.10980392156862745`], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$7"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {0.43388373911755884`, -0.9009688679024196}, Automatic, {0., 
           0.}], "InsetString"], {{
           RGBColor[
           0.5490196078431373, 0.06274509803921569, 0.1607843137254902], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$8"], 
       TagBox[
        StyleBox[
         DiskBox[{6.049014748177263*^-16, -1.}, 0.06338463941913046], {{
           RGBColor[1., 0.8352941176470589, 0.], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$9"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {-0.43388373911755757`, -0.9009688679024187}, Automatic, {0., 
           0.}], "InsetString"], {{
           RGBColor[
           0.7764705882352941, 0.5764705882352941, 0.32941176470588235`], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$10"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {-0.7818314824680295, -0.6234898018587327}, Automatic, {0., 
           0.}], "InsetString"], {{
           RGBColor[1., 0.4980392156862745, 0.], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$11"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {-0.9749279121818235, -0.22252093395631342`}, Automatic, {0., 
           0.}], "InsetString"], {{
           RGBColor[
           0.788235294117647, 0.09019607843137255, 0.592156862745098], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$12"], 
       TagBox[
        StyleBox[
         TagBox[
          InsetBox[
          "", {-0.9749279121818237, 0.22252093395631536`}, Automatic, {0., 
           0.}], "InsetString"], {{
           RGBColor[
           0.792156862745098, 0.6980392156862745, 0.8392156862745098], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$13"], 
       TagBox[
        StyleBox[
         DiskBox[{-0.7818314824680302, 0.6234898018587343}, 
          0.12540173406599], {{
           RGBColor[
           0.41568627450980394`, 0.23921568627450981`, 0.6039215686274509], 
           EdgeForm[{
             Thickness[0.01], 
             GrayLevel[1], 
             Opacity[1]}]}}, StripOnInput -> False], "DynamicName", BoxID -> 
        "VertexID$14"]}}], $CellContext`flag}, 
    TagBox[
     DynamicBox[GraphComputation`NetworkGraphicsBox[
      3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
      CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
       SynchronousUpdating -> False, TrackedSymbols :> {$CellContext`flag}},
      ImageSizeCache->{{-6.478613381979812, 
       289.4775112774571}, {-147.75864706869285`, 147.7421112272037}}],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False,
    UnsavedVariables:>{$CellContext`flag}]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->300]], "Output",
 CellChangeTimes->{
  3.81452294775996*^9, 3.814523190488027*^9, 3.814523861906103*^9, 
   3.814523911709984*^9, {3.8145245504224863`*^9, 3.8145245579958572`*^9}, {
   3.814524754975919*^9, 3.814524766153887*^9}, {3.814524809667129*^9, 
   3.8145248282479887`*^9}, {3.814524864321156*^9, 3.814524897415954*^9}, {
   3.814528861241734*^9, 3.81452886605818*^9}, 3.83293763590481*^9, 
   3.83294676426303*^9, {3.8329468379834547`*^9, 3.832946848631001*^9}, 
   3.832948003694558*^9, 3.833913991458335*^9, 3.8339140566102953`*^9, 
   3.833915721559813*^9, 3.833916804217743*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"ab7e1a25-a715-405a-ac2c-902eedc390f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

export network graphs\
\>", "Subsection",
 CellChangeTimes->{{3.806841404839616*^9, 3.806841411031802*^9}, 
   3.806841448874751*^9, {3.808759121178666*^9, 3.8087591239236403`*^9}, 
   3.814265692143776*^9},ExpressionUUID->"72ce614a-7845-4672-9235-\
386289617eb2"],

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<~/PNAS_Wieczynski_etal_2021_Master/graphics/raw_graphics/network.svg\>\
\"", ",", 
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"commNetwork", "[", 
       RowBox[{
        RowBox[{"Range", "[", 
         RowBox[{"1", ",", 
          RowBox[{"Length", "[", "sppOrder", "]"}]}], "]"}], ",", "#", ",", 
        "0.01", ",", "0.1"}], "]"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{"10", ",", "16", ",", "22", ",", "28", ",", "34"}], "}"}]}], 
    "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8087568582874813`*^9, 3.808756881388894*^9}, {
   3.808758048414144*^9, 3.808758054027198*^9}, {3.808758413253248*^9, 
   3.808758425345118*^9}, {3.808758482387505*^9, 3.80875848398378*^9}, 
   3.8087592885254583`*^9, {3.80877527626476*^9, 3.8087752805309668`*^9}, {
   3.8087755247948503`*^9, 3.808775555182276*^9}, {3.8143702165278187`*^9, 
   3.814370223818474*^9}, 3.814377139666831*^9, 3.814377293295575*^9, 
   3.814377329089192*^9, {3.814435595451601*^9, 3.814435611716428*^9}, 
   3.81443890081208*^9, {3.814473640634544*^9, 3.814473679357016*^9}, {
   3.814473743701412*^9, 3.814473744222415*^9}, 3.8144737832516947`*^9, {
   3.814476172484033*^9, 3.8144762130696697`*^9}, {3.814485549805398*^9, 
   3.81448555197015*^9}, 3.832946910649664*^9, 3.832946954412366*^9, {
   3.832947209032744*^9, 3.832947209601912*^9}, {3.832947877956338*^9, 
   3.832947879296323*^9}, {3.832947917911356*^9, 3.832947933333848*^9}, {
   3.833915762398878*^9, 3.833915790765057*^9}, {3.833915874063415*^9, 
   3.833915875473802*^9}, {3.8339168103563843`*^9, 3.8339168120062304`*^9}, {
   3.833916870138177*^9, 3.833916871515006*^9}, {3.833916909548965*^9, 
   3.833916911185049*^9}, {3.8405424637392483`*^9, 3.840542467069495*^9}, {
   3.840542528794093*^9, 
   3.8405425326395597`*^9}},ExpressionUUID->"c2b05d1d-8a2a-4c6e-b803-\
aacfb318df21"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1722, 1395},
WindowMargins->{{Automatic, 123}, {Automatic, 0}},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"36ff0247-0ec5-4214-92d9-d0a46aad058a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 223, 4, 30, "Input",ExpressionUUID->"543c23a4-03cf-44d4-b57c-937e39722863"],
Cell[CellGroupData[{
Cell[805, 28, 222, 4, 67, "Section",ExpressionUUID->"0b852f5f-b3e4-41ee-a6c9-c599dd093b88"],
Cell[CellGroupData[{
Cell[1052, 36, 12727, 313, 577, "Input",ExpressionUUID->"1bc24ddc-0547-4873-9472-3fb756ae51d0"],
Cell[13782, 351, 30019, 735, 34, "Output",ExpressionUUID->"ae3d4ea2-3803-477b-ad12-e6661810097f"],
Cell[43804, 1088, 3958, 57, 34, "Output",ExpressionUUID->"3cd0a287-15d5-4b2d-8a6e-9083436abf73"],
Cell[47765, 1147, 6233, 94, 285, "Output",ExpressionUUID->"56b42354-171c-4f6b-a237-98bb726fa84c"],
Cell[54001, 1243, 3972, 57, 34, "Output",ExpressionUUID->"a91cc394-528d-442c-a4a6-1f875fcaffed"],
Cell[57976, 1302, 9325, 148, 285, "Output",ExpressionUUID->"30945eb4-d7a9-4649-8590-9832252bc27b"],
Cell[67304, 1452, 212369, 3553, 532, "Output",ExpressionUUID->"a73c8e40-f254-419c-b91a-123e5396e60a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[279722, 5011, 238, 4, 67, "Section",ExpressionUUID->"148771db-1105-41f3-99c4-b84518eecbea"],
Cell[CellGroupData[{
Cell[279985, 5019, 285, 5, 54, "Subsection",ExpressionUUID->"8acc792b-2a2e-48d0-9ea8-0af1a7af8c71"],
Cell[280273, 5026, 15216, 368, 661, "Input",ExpressionUUID->"cd068fdc-dd8f-4b42-a78a-cb07b7158a2b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[295526, 5399, 460, 7, 54, "Subsection",ExpressionUUID->"0692397a-b6d1-488e-8f0a-d1d69673252a"],
Cell[295989, 5408, 366, 6, 35, "Text",ExpressionUUID->"b5b56942-3a5c-4f35-9ddb-d530bf7fab01"],
Cell[CellGroupData[{
Cell[296380, 5418, 10999, 206, 325, "Input",ExpressionUUID->"3320bece-c3c2-48bd-b397-9ada01f2e03c"],
Cell[307382, 5626, 2035, 29, 34, "Output",ExpressionUUID->"a82adf50-cb03-455b-9174-b23bf97b1171"]
}, Open  ]],
Cell[309432, 5658, 163, 3, 35, "Text",ExpressionUUID->"f76d43ba-b101-493f-9391-cb58e85d2dcb"],
Cell[309598, 5663, 1942, 36, 30, "Input",ExpressionUUID->"56435b08-124f-4e72-8be1-af6601693291"],
Cell[311543, 5701, 373, 9, 58, "Text",ExpressionUUID->"4b4554cf-bb8f-4c34-bc82-0458283c8490"],
Cell[311919, 5712, 7778, 152, 430, "Input",ExpressionUUID->"77dc891c-7f71-451d-bfbd-09e1f0a18ba1"],
Cell[319700, 5866, 163, 3, 35, "Text",ExpressionUUID->"35d3fbe3-1dba-4bc2-9941-5f0bd3e7b320"],
Cell[319866, 5871, 2097, 48, 94, "Input",ExpressionUUID->"31a6879e-31d1-41f7-82a7-4dab6176f9ae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[322012, 5925, 214, 4, 67, "Section",ExpressionUUID->"d92dc791-6438-4ce9-a99c-fd8208c7ca4e"],
Cell[CellGroupData[{
Cell[322251, 5933, 15101, 307, 598, "Input",ExpressionUUID->"cd77b859-e2fc-47fc-aaa6-7eb7884b4567"],
Cell[337355, 6242, 114649, 2622, 318, "Output",ExpressionUUID->"ab7e1a25-a715-405a-ac2c-902eedc390f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[452041, 8869, 275, 7, 81, "Subsection",ExpressionUUID->"72ce614a-7845-4672-9235-386289617eb2"],
Cell[452319, 8878, 1916, 36, 30, "Input",ExpressionUUID->"c2b05d1d-8a2a-4c6e-b803-aacfb318df21"]
}, Open  ]]
}, Open  ]]
}
]
*)

